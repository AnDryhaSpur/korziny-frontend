{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/data/regionPaths.js","../../src/data/data.js","../../src/data/getRegionData.js","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/components/MapRegion.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export default [\r\n    {\r\n        title: \"Республика Адыгея\",\r\n        id: \"RU-AD\",\r\n        path: \"M32.8506,253.68l-.3354-2.0125-1.8112.6708-2.2808-.6708L27.35,250.3259l-.6708-.6708-.5367.6708.2012.6708.3354.6708,1.2075,1.3417,1.0733,1.3417h.4025l.6037-1.3417h.7379l.47,2.0125-.2012,2.0125H29.4293l-1.5429,1.3416.1342,1.3417.2012.6708-.6708.6708h-.8721l.1342-.6708-.2683-.6708h-.5367l-.6708.6708-.2683.6708.805,2.0125,1.3417,1.3417,1.3417-.6708.8721-2.0125h.6037l.5367-.6708.8721-1.3417,1.4758-.6708-.2012,1.3417-.2683,1.3417h1.0733l.3354-.6708.3354-.6708.4025-.6708.805-.6708-.6708-3.3541Z\"\r\n    },\r\n    {\r\n        title: \"Республика Алтай\",\r\n        id: \"RU-AL\",\r\n        path: \"M301.9874,322.1047h-.6708l-.6708-.6708-.6708-.6708-.6708.6708h-.6708l-.6708-.6708-1.3417-1.3417-2.0125.6708-.6708,1.3417.6708,1.3417-1.3417,1.3417-.6708-.6708h-2.0125l-.6708-.6708-.6708-.6708-.6708,1.3417L287.9,324.788h-1.3417l-.6708.6708-.6708.6708h-4.6958l-1.3417.6708-.6708.6708h0l-1.3417-.6708-1.3417.6708,1.3417,1.3417,1.3417,1.3417v2.6833H276.496l1.3417,3.3541,2.0125,2.6833.6708,2.0125.6708,2.0125.6708.6708h.6708l1.3417.6708.6708.6708,2.6833-.6708,2.0125-.6708v.6708l-.6708.6708,3.3541,4.6958h2.6833l1.3417-.6708.6708-1.3417,3.3541.6708h2.0125l.6708-.6708h.6708l.6708.6708,1.3417-2.0125.6708-1.3417-.6708-1.3417V342.9h-.6708L304,342.23l2.0125-1.3417h1.3417v-1.3417l-1.3417-.6708v-2.6833h-.6708l-.6708-.6708v-4.6958l-1.3417.6708-1.3417.6708-2.0125-.6708-.6707-2.0125v-.6708l.6708-.6708V326.13l1.3417-.6708,1.3417-1.3417v-2.0125h-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Алтайский край\",\r\n        id: \"RU-ALT\",\r\n        path: \"M283.875,302.6506h-2.6833v1.3417h-.6708l-.6708-1.3417-3.3541,2.0125-2.0125,2.0125-2.6833-4.025h0l.6708-.6708-.6708-.6708h-.6708v-1.3417l-.6708-.6708-.6708-2.0125v-.6708l-4.025,1.3417-4.6958,2.0125h0l-.6708.6708h-2.0125l-2.0125-.6708h-1.3417l-1.3417.6708v-.6708l-.6708-.6708-.6708.6708-1.3417,1.3417,4.6958,24.15,2.6833-.6708v-1.3417h1.3417v-.6708l.6708-.6708,1.3417,3.3541,1.3417,2.6833,2.6833.6708,1.3417.6708h2.6833v-.6708H271.8l.6708-.6708,2.6833,2.0125,1.3417,2.6833h2.0125v-2.6833l-1.3417-1.3417-1.3417-1.3417,1.3417-.6708,1.3417.6708.6708-.6708,1.3417-.6708h4.6958l.6708-.6708.6708-.6708H287.9l.6708-1.3417.6708-1.3417.6708.6708.6708.6708h2.0125l.6708.6708,1.3417-1.3417-.6708-1.3417.6708-1.3417,2.0125-.6708v-2.0125l-.6708-1.3417.6708-.6708v-.6708l-.6708-.6708h0l.6708-1.3417.6709-.6709-.6709-.6707-1.3417-.6708-.6708-1.3417v-2.0125l-.6708-.6708-.6708-.6708-.6708-.6708v-1.3417h-.6708L290.72,303.39l-.1365-1.41-1.3417-1.3417-2.0125,1.3417-.6708.6708H283.875Z\"\r\n    },\r\n    {\r\n        title: \"Амурская область\",\r\n        id: \"RU-AMU\",\r\n        path: \"M526.0445,284.5383l1.3417-1.3417.6708-2.0125h-1.3417l-.6708-.6708-1.3417-.6708-.6708.6708-1.3417.6708H522.02l-.6708-.6708-2.0125,1.3417-2.6833-.6708-1.3417,1.3417h-2.0125l-.6708.6708v.6708l-1.3417.6708-1.3417,1.3417v.6708l-.6708.6708-2.0125-.6708-2.0125-.6708v.6708h-2.6833l-.6708,1.3417v.6708l-1.3417-.6708h-.6708l-1.3417.6708-2.0125,1.3417h-1.3417l-1.3417-.6708h-2.0125l-2.0125.6708-3.3541-.6708-1.3417-1.3417-1.3417-1.3417-3.3541-.6708h-4.025l-.6708-.6708-1.3417-.6708h-2.6833l-1.3417-.6708-1.3417-.6708-1.3417-.6708-2.6833.6708-2.6833,1.3417v2.6833h.6708l0,1.3415.671.671,1.3417.6708,1.3414.6707-.6706.671h-.6708v1.3417l1.3417,1.3417h.6708v-.6708l1.3417-.6708,2.0125-.6708,1.3417,2.0125.6708,2.0125h.6708l1.3417-.6708,1.3417,3.3541-1.3417,3.3542.6708.6708h.6708l2.0125,1.3417-.6708.6708-.6708.6708v2.0125l-.6708,1.3417h0l2.0125,2.0125,1.3417,2.0125h3.3541l1.3417-.6708,1.3417-.6708h.6708l.6708-.6708,1.3417.6708,1.3417.6708h0l.6708-.6708,2.0125,1.3417,2.0125.6708v-.6708h4.025l.6708.6708v.6708h.6708l.6708.6708h.6708v1.3417h.6708l1.3417,1.3417.6708.6708.6708,2.6833,3.3541,4.025h.6708v.6708l.6708.6708v1.3417l1.3417,1.3417,1.3417,2.0125.6708.6708.6708,2.0125h.6708l.6708.6708v1.3417l2.0125,3.3541,2.6833-.6708,2.6833-.6708h0l.6708.6708h1.3417v.6708h.6708l.6708-.6708.6708.6708v-.6708h.6708v-.6708l2.6833,2.0125,4.6958.6708h.6708l.6708-1.3417.6708-2.0125.6708-.6708h0V334.18l-.6708-2.0125v-4.6958l-1.3415-.671-.671,0V326.13l-.6708-.6708-.6708.6708h-.6708v-.6708l-.3288-.3291-.3421-.3418-.6708.6708v-4.025l.6708-2.0125.6708-1.3417v-.6708l-.6708-1.3417,2.0125-1.3417,2.0125-1.3417v-1.3417l.6708-1.3417.6708-.6708,1.3417-.6708,1.3417-.6708v-2.6833l-.6708-1.3417h0l3.3541-.6708h2.6833l.6708-.6708V301.98l-.6708-1.3417v-2.6833l-.6708-2.0125-2.0125-.6708h-.6708l-.6708.6708-2.0125.6708h-1.3417l-.6708,1.3417-1.3417,1.3417-2.6833,1.3417-1.3417.6708-.6708.6708h-2.6833l-1.3417-2.0125-1.3417-1.3417H522.02l-2.0125-.6708v-2.6833L522.02,293.93v-4.025l.6708-.6708.6708-.6708,1.3417-1.3417,1.3417-1.3417v-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Архангельская область\",\r\n        id: \"RU-ARK\",\r\n        path: \"M228.1962,105.4267v-1.3417h-1.3417v1.3417l.6708.6708-.6708,2.6833,2.0125-2.0125v-.6708Zm15.4291-14.7582-2.0125-.6708H239.6v1.3417h-.6708V92.681l-1.3417-.6708h-2.0125v1.3417l.6708.6708h-.6708v.6708h0l-.6708.6708-2.0125,1.3417L231.55,98.0476h0l-.6708-.6708v-.6708l-.6708-.6708-1.3417.6708-1.3417,1.3417-.6708,2.0125v2.0125h1.3417v.6708h0l.6708-.6708.6708-.6708v.6708l-.6708,1.3417,1.3417,1.3417.6708-.6708h0l-.6708.6708-.6708,2.6833.6708.6708.6708,1.3417h-1.3417l-.6708-.6708v.6708l-.6708.6708h-.6708v1.3417l.6708,1.3417h1.3417l.6708,1.3417v1.3417H231.55v-.6708h.6708l.6708,1.3417.6708,1.3417.6708.6708v-.6708h0v-.6708l.6708-.6708v1.3417l1.3417,2.0125h0v-1.3417h0l.6708.6708h1.3417l-.6708-2.0125-.6708-2.0125v-3.3541l.6708-3.3541.6708-2.6833,1.3417-2.6833h.6708l.6708-1.3417.6708-1.3417.6708-1.3417h0l.6708.6708,1.3417-.6708v-.6708l-.6708-.6708h.6708l1.3417.6708.6708-.6708v-.6708h-.6708l-.6708-.6708,2.0125.6708V95.3642h1.3417l-.6708-2.0125L246.3085,92.01v-.6708l-.6708-.6708h-2.0125ZM259.0543,75.91l-1.3417,1.3417h0v.6708h.6708v.6708l.6708.6708h-1.3417l-1.3417.6708h.6708l.6708.6708h0v.6708l.6708.6708h0l-1.3417-.6708-2.0125-.6708-.6708.6708.6708,1.3417h-2.6833l.6708.6708V83.96h-.6708l-.6708-.6708V84.631l.6708,1.3417-.6708-.6708L250.3336,83.96l-1.3417.6708v1.3417h0v-.6708L247.65,84.631l-1.3417.6708-.6708.6708-.6708-.6708h0l1.3417,2.0125,2.6833.6708v.6708h-4.025l-1.3417.6708v.6708h2.0125l1.3417,1.3417.6708,1.3417.6708-.6708h0v2.0125l1.3417.6708h0l.6708-.6708v.6708l.6708-.6708,1.3417-.6708-.6708-1.3417h0V90.6684h0l.6708,2.0125h1.3417l.6708-.6708-.6708-1.3417-.6708-.6708v-.6708h0l1.3417.6708.6708,1.3417h0V92.01l.6708-1.3417.6708-1.3417-.6708-.6708v-.6708h.6708v-.6708h.6708v3.3541l.6708-.6708h0l.6708-.6708,1.3417-.6708,1.3417-2.0125-.6708-.6708v-.6708h.6708v1.3417l1.3417.6708h0l.6708-.6708.6708-1.3417v0l.6708,2.0125.6708-.6708V85.3018h.6708v1.3417l1.3417-.6708v-.6708l.6708.6708.6708-.6708h0v-.6708l-.6708-.6708h1.3417l.6708-.6708-.6708.6708,1.3417-.6708,2.0125-.6708h0v.6708l.6708-.6708h.6708l2.0125-.6708h11.4041l6.7083-.6708,2.0125-1.3417,1.3417-2.0125,1.3417-1.3417-.6708-2.0125-3.3541-1.3417-4.025,1.3417v.6708l-.6708.6708h-.6708v-.6708h-8.7208l-2.0125-2.0125-1.3417-.6708-.6708,1.3417-2.0125.6708h.6708v-.6708h-1.3417l-1.3417.6708-1.3417-.6708h-2.0125l-1.3417.6708h-1.3417v.6708H264.421V76.581l-.6708.6708-.6708-.6708-.6708-.6708-.6708.6708-.6708.6708-1.3417.6708h0v-.6708l-.6708-1.3417Zm33.5415-49.0376V25.1955l-1.3417-.3354-.6708,1.4087v2.0125Zm-7.3791-5.97-.6708,1.6771,2.0125.3354.6708-2.0125h-2.0125Zm7.3791.2683,2.0125,1.14.6708-.6708-1.3417-1.4758L292.5958,21.17Zm-3.3541,3.0187v.5367l1.3417-.8721h-.6708Zm-.6708-5.3666v-.5367l-.6708-.0671v1.61h0Zm.6708.7379-.6708.5367v1.4087l1.3417-1.3417v-.4025Zm4.025.0671.6708-.5367-2.0125-2.2137-.6708,1.14.6708,1.14Zm-14.0874,2.8846v.47l.6708.4025.6708-.9392V21.3717l-1.3417-.0671Zm.6708-4.025-1.3417.8721.6708.805.6708-.7379ZM274.4834,8.76v.8721l.6708.1342v1.4087l2.0125-.0671,1.3417-.4025.6708-.1342v.0671l.6708.1342.6708,1.6771.6708-.5367V10.4372l-.6708-1.4087h-1.3417l-1.3417.1342-.6708-.0671-.6708-.1342-1.3417-.6037-.6708.4025Zm10.7333,2.8846v-.4025l-.6708.2012-1.3417.2683-.6708.2683V13.523L279.85,13.59l-2.0125-.5367v.47l.6708.6037h-.6708l-.6708-.3354v1.0733h-.6708v-1.14l-1.3417-.2012-.6708.9392v1.0062l1.3417-.0671v.8721l-.6708.4025-.6708.4025.6708.2012.6708-.0671.6708.5367.6708-.6037h0v.4025l.6708.0671h0l.6708-1.0062-.6708-.7379v-.0671l2.0125.2012.6708.6708.6708-.47,1.3417-.4025,4.025-.2012-.6708-1.4087-1.3417-.47V13.59l.6708-.47.6708-.0671.6708-.6708v-.2683h-1.3417v-.47Zm2.0125-1.8112-.6708.6037.6708.2012,1.3417-.2683V9.6993L287.9,9.3639Zm24.15,7.1108,1.3417,1.2075.6708-1.0733L312.05,15.8039ZM306.0124,27.275l1.3417,1.2746,2.6833.1342L312.05,26.94v-.1342l.6708-2.2808-1.3417-.6708-.6708,1.0062-.6708.8721-.6708-.1342-2.0125.2683-1.3417,1.4087Zm-9.3916,4.2933-.6708-.805-1.3417,1.14L295.95,32.91Zm0-5.3666-3.3541-.4025v3.5554h.6708v-.4025l.6708.0671.6708-.2683-.6708-.47v-.4025l2.0125.2683.6708-1.14Zm2.6833-.6708-.6708.6708v1.61l.6708.1342v-.0671l.6708-.0671v.6708l.6708.9392,2.0125-.6708,2.0125-1.5429.6708-1.0062V25.1284l-.6708-.4025h-1.3417l-1.3417-.8721-1.3417-.3354Zm-1.3417-3.6225.6708,1.0062,1.3417-.4025-.6708-1.0062Zm-1.3417,1.7442-.6708-.3354-.6708.7379.6708.2012Zm0-5.7021-.6708-.805-.6708-.6708-.6708-.6708V15.133l-.6708.2012-.6708.47.6708,1.4087.6708,1.6771.6708,2.0125,2.0125,1.0733Zm1.3417-.47-.6708-.805-.6708.0671.6708,1.4087v1.5429l.6708,1.2075.6708.1342v-2.75Zm2.0125.1342.6708-.805-1.3417-.0671-.6708.7379Zm4.6958,5.7691,1.3417-1.2746-1.3417-.6037-2.0125,1.0733ZM304,15.6026l-.6708.4025v1.0733L304,16.6759Zm2.6833-4.9641-1.3417-.2683v-.2012l-.6708.0671V10.84L304,11.5105l1.3417.6037,2.0125-.8721-.6708-.6037Zm-5.3666,2.1467v1.9454l2.0125.3354-.6708-2.2808Zm-3.3541,1.4758v-.805l-.6708.2683v1.61l1.3417.6708h2.0125l.6708.1342v-.1342l-.6708-1.8112-2.0125.6037ZM169.1632,119.5141h-.6708l-.6708.6708H165.809l-2.0125.6708-1.3417-.6708-.6708-.6708-2.0125.6708h-2.6833l-2.6833,2.0125-.6708,2.6833-.6708,2.6833h-.6708l-.6708.6708.6708-.6708h0l-.6708-.6708-.6708-.6708v.6708H150.38l-1.3417-.6708-.6708-2.0125-1.3417-2.0125-1.3417-.6708-.6708.6708v-.6708l.6708-.6708h1.3417l-.6708-3.3541-2.0125-2.6833-1.3417.6708-1.3417.6708-.6708,5.3666h.6708l1.3417.6708-1.3417,2.0125-2.0125,2.0125h0l-.6708-.6708h-.6708v.6708l-1.3417-2.0125-1.3417-2.6833-1.3417,1.3417-1.3417.6708-.6708-.6708-.6708-.6708-.6708,2.0125-.6708,2.0125-.6708,1.3417-1.3417,1.3417.6708,2.6833,1.3417,2.0125-1.3417,1.3417-1.3417,1.3417v.6708h0l-.6708,2.0125-1.3417,2.0125h0l-.6708-.6708-.6708.6708-.6708.6708-.6708,2.0125-.6708,2.0125-.6708,1.3417v2.6833h.6708l.6708.6708v1.3417l1.3417.6708h.6708l.6708,1.3417v.6708h.6708l.6708.6708.6708.6708.6708.6708.6708.6708v1.3417h2.0125l1.3417-.6708v.6708h.6708l.6708.6708.6708.6708v.6708l.6708,1.3417h.6708l1.3417.6708v1.3417h2.0125l1.3417-.6708,1.3417,2.0125,2.0125,2.6834h4.025v2.0126l1.3417.6707.6708,2.6833,3.3541.6708.6708,1.3417,1.3417,1.3417,1.3417-.6708h1.3417l4.025-1.3417.6708-1.3417.6708-2.0125,3.3541-2.6833,2.6833-2.6833-.6708-1.3417-.6708-1.3417h-.6708l-.6708.6708h-2.6833l-.6708,1.3417v.6708H161.784l-.6708-.6708h-1.3417l-.6708-.6708.6708-2.6833,2.0125-2.6833h1.3417l2.0125-.6708-.6708-1.3417v-1.3417l1.3417-2.0125v-3.3542l-1.3417-2.6833v-2.6833l4.6958,1.3417,4.6958,3.3541v2.0125l.6708.6708,1.3417-1.3417.6708,1.3417,1.3417-.6708h.6708v.6708l.6708.6708.6708-.6708h.6708l1.3417,1.3417.6708.6708.6708-.6708.6708-.6708v-.6708l-.6708-1.3416.6708-2.0125.6708-2.0125-.6708-.6708H182.58l.6708-2.0125,2.0125-2.6833,2.0125-2.6833-1.3417-1.3417-1.3417-.6708h-1.3417l-1.3417.6708v.6708h-1.3417v-.6708l-.6708-.6708-.6708-1.3417-2.0125-4.025-2.6833-4.025v-2.0125l-3.3542,2.6833.6708-1.3417-.6708-.6708-.6708-.6708-.6708.6708.6708-.6708,1.3417-.6708-2.6833-5.3666Z\"\r\n    },\r\n    {\r\n        title: \"Астраханская область\",\r\n        id: \"RU-AST\",\r\n        path: \"M77.3937,253.0092h-.8721l-.7379-.6708-.1342.6708h-.1342l-.5367-.6708h-.8721l-1.14.6708.6708,1.3417.4025,2.0125.805.6708.5367.6708-.8721.6708-.6037,1.3417.2012,2.0125.6708,1.3417h1.7441l1.4087,1.3417H76.79l-1.4758.6708-.3354,3.3541-.2683,2.6833-2.415.6708H69.8133l.1342.6708.6708.6708-.2683.6708-.2012.6708.6708.6708.47.6708-2.2808.6708-.6037,2.0125.2683.6708h1.3417l.47.6708.47.6708v.6708h.6708l-.1342.6708h.6037l.4025-.6708,1.9454,1.3417.0671.6708h.0671l.7379-.6708H75.65l-.1342.6708.47-.6708.6708-.6708.4025.6708-.067.6708-.5367.6708-.2683.6708.805-.6708.805-.6708,1.8783-1.3417,1.9454-.6708.3354.6708-1.2075-5.3666H81.15l.805,1.3417h1.3417l.6708-4.6958v-5.3666l-1.3417-1.3417-1.0733-1.3417-.6708.6708-.6708-.6708.6037-2.0125,1.14-1.3417-.2683-2.0125-.6708-2.0125,1.61-1.3417-.6708-1.3417-.4025-1.3417-2.0125-.6708H77.3937Z\"\r\n    },\r\n    {\r\n        title: \"Республика Башкортостан\",\r\n        id: \"RU-BA\",\r\n        path: \"M162.4549,230.8719l-.6708-.6708V229.53h-2.0125l-2.0125-.6708-2.0125.6708-2.0125.6708-1.3417.6708-1.3416-.6708-2.6833,1.3417-2.6833.6708-.6708-.6708v.6708l-.6708.6708h0l.6708.6708v1.3417l-.6708,1.3417-.6708.6708H142.33v.6708l-.6708,1.3417-1.3417,2.6833h0l-.6708,2.0125v4.025l.6708.6708.6708.6708h0v.6708l.6708.6708h.6708l-.6708,2.0125V253.68l.6708,1.3417v.6708h-1.3417l.6708,2.0125.6708,2.0125h.6708l1.3417-1.3417,2.0125.6708-1.3417,2.0125-1.3417,1.3417.6708.6708.6708.6708-1.3417,3.3541h.6708l.6708,1.3417.6708.6708h2.6833l1.3417.6708.6708.6708,2.6833.6708,1.3417-2.6833h1.3417l.6708-1.3417v-.6708h.6708v-1.3417l1.3417-1.3417.6708-.6708,2.0125-3.3541,2.0125-3.3541h1.3417l1.3417-.6708h.6708l.6708.6708.6708.6708.6708-1.3417,2.0125-2.0125,1.3417-2.0125-3.3541-.6708-4.025.6708-.6708-.6708v-.6708h-2.6833v-.6708l-1.3417-4.6958v-.6708h.6708v-.6708l.6708-.6708,2.0125-.6708,2.0125,1.3417-.6708,1.3417v1.3417l1.3417-.6708.6708.6708v1.3417h.6708l.6708-.6708.6708-1.3417,1.3417.6708h.6708l.6708-.6708h2.6833l-.6708-.6708-.6708-.6708,1.3417-2.6833v-2.0125h-.6708l-2.0125-1.3417-2.6833-1.3417-.6708-.6708h-.6708V234.226h-2.6833v-.6708l-.6708-2.0125h-.6708l-.6708-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Белгородская область\",\r\n        id: \"RU-BEL\",\r\n        path: \"M61.2266,210.747l1.0733-.6708.1342-1.3417-.6037-1.3417-.6037-.6708-4.025-2.0125-3.1529-1.3417-.7379-.6709-.6037-1.3416h-2.415l-1.2746-1.3417-2.415,4.025.8721.6708,1.3417,1.3417.3354,1.3417.47,1.3417.0671.6708,2.2137.6708,2.1467,1.3417H53.78l-.47,2.6833v2.0125l.8721.6708.8721-.6708.805,2.6833,1.61,2.6833.47-.6708.6037-.6708.6708-1.3417,1.0062-2.0125h.6708l.6708-.6708-.1342-1.3417v-2.0125h.9392l.6708-1.3417h-.9392l-.8721-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Брянская область\",\r\n        id: \"RU-BRY\",\r\n        path: \"M57.0675,174.5222l-.6708.6708h-2.75l-1.2746-.6708H50.963l-1.14-2.0125-2.0125-.6708-.6037.6708-.2012,1.3417-.4025.6708h-.47l-1.0062,1.3417-1.0733,1.3417-.6037,1.3417h-.47l.5367.6708-.1342.6708h.4025l1.6771.6708,1.2746-.6708.6037.6708.4025,1.3417,1.2746.6708,1.0733.6708,1.61,2.0125.2012,2.0125L51.03,188.61l-.1342,2.0125L52.17,189.28l1.2075,1.3417.47-.6708h2.6833l.7379-1.3417,1.61-.6708.2012-1.3417.2683-.6708h1.0733l1.4758-.6708h.47l.2683-.6708-1.5429-2.6833.6708-.6708,1.0733-1.3417-.6708-3.3541-.4025-2.6833-2.3479.6708H57.0675Z\"\r\n    },\r\n    {\r\n        title: \"Республика Бурятия\",\r\n        id: \"RU-BU\",\r\n        path: \"M430.7867,291.2465h-1.3417l-1.3417-1.3417v-1.3417l-1.3417.6706-1.3417,0h-2.0125l-.6708-.6708-.6708-.6708-.6708,1.3417-2.0125,1.3417h-3.3541l-.6708-.6708h-.6708v-.6708l-.6708-.671-1.3417,1.3419-.6708,1.3417h-.6708l-.6708-.6708-2.0125,1.3414-1.3417,1.3419.6708,3.3541H409.32v1.3417l1.3417.6708.6708,1.3417h-1.3417l-.6708,1.3414-.6708,5.3668.6708,5.3666,2.0125-7.3791,1.3417-2.6833,2.0125-.6708-.6708,8.7208-1.3417,9.3916-.6708.6708-.2121.3261-.4587-.3261-.3678-.6708-.303-1.3417-.6708,1.3417-.6708,1.3417h2.0125v1.3417l-.6708,1.3417H409.32l-1.3417,2.0125-2.0125,2.6833-8.05,3.3541-.6708,2.0125-.6708,2.0125-4.6958,2.6833-2.6833.6708-.6708.6708-2.0125,2.0125h-2.6833l-.6708.6708h-.6708v-2.6833l-.6484-.6486-1.364-1.3639-.6709-1.3418V334.85l-4.6958-4.025-.6708.6708h-.6708l-.6708-1.3417-.6708-2.0125-3.3541-2.0125-2.6833-2.0125-.6708-2.0125-.6709-1.3418-2.6833,2.6835-2.6833,2.0125-.6708-.6708h-.6708v3.3541l-.6708.6708v1.3417l.6708.6708v1.3417l.6708.6708,1.3417.6708,4.6958,2.6833,4.025,2.0125h.6708l.6708.6708,2.6833.6708,2.0125.6708v4.025l4.025,4.6958,6.0374,1.3417,5.3666-1.3417,1.3417-.6708h.6708l2.6833.6708,2.6833.6708h2.0125l2.0125,1.3417,1.3417,1.3417h1.3417l1.3417.6708v-2.6833l1.3417-2.0125h1.3417l1.3417-1.3417-1.3417-.6708-2.0124-1.3418,1.3415-1.3415L409.32,342.23h0l-.6708-2.0125.6708-1.3417h2.6833l2.0125.6708h0l1.3417-1.3417,2.0125-1.3417h2.0125l1.3417.6708.6708-.6708,1.3417-1.3417,1.3417-1.3417,1.3417-.6708,1.3417-.6708.5641-1.1282.7775-1.5552h.6708l1.3417.6708.6708-1.3417,1.3417-.6708,3.3541-.6708,3.3541-2.6833-1.3417-4.025-1.3417-2.6833,1.3417-1.3417,4.025-3.3541,3.3541-3.3541,1.3417-.6708,1.3417-.6708h1.3417l1.3417-.6708v-4.6958l-3.3541-2.6833-2.0125-1.3417v-2.6833h0l-.6708-1.3417h0v-.6708h0l-.6708-1.3417v-.6708h0v-1.3417l-.6708-.6708-.6708-.6708H441.52l.671-.671v-1.3415l1.3417-1.3417h.6708l.6708-.6708L441.52,285.88l-3.3541,4.025-3.3541,1.3417-2.6833-.6708-1.3417.6708Z\"\r\n    },\r\n    {\r\n        title: \"Чеченская Республика\",\r\n        id: \"RU-CE\",\r\n        path: \"M50.2921,282.5257l-.2683-.6708-1.0062.6708-1.4758.6708H46.938l.5367.6708,1.4758,1.3417-1.4087,2.6833h-.1342l-.2683.6708h0l-2.1467.6708-1.8783-.6708.7379-.6708H41.2359l.2012.6708-.1342.6708h.9392l1.0733,1.3417.3354,1.3417.1342.6708.7379.6708.7379,1.3417L46.67,293.93h1.4758l.7379.6708.2683-.6708h2.415l.6708-1.3417,1.14-2.0125,1.6771-.6708,1.4758-.6708.2012-1.3417-.3354-1.3417H54.1159l.0671-.6708.2012-.6708h-.8721l-.9392-.6708-.0671-.6708-.1342-.6708H50.8288l-.5367-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Челябинская область\",\r\n        id: \"RU-CHE\",\r\n        path: \"M173.859,239.5927v2.0125l-1.3417,2.6833.6708.6708.6708.6708h-2.6833l-.6708.6708h-.6708l-1.3417-.6708-.6708,1.3417-.6708.6708H166.48v-1.3417l-.6708-.6708-1.3417.6708v-1.3417l.6708-1.3417-2.0125-1.3417-2.0125.6708-.6708.6708v.6708h-.6708v.6708l1.3417,4.6958v.6708h2.6833v.6708l.6708.6708,4.025-.6708,3.3541.6708-1.3417,2.0125-2.0125,2.0125-.6708,1.3417-.6708-.6708-.6708-.6708h-.6708l-1.3417.6708h-1.3417l-2.0125,3.3541-2.0125,3.3541-.6708.6708-1.3417,1.3417v1.3417h-.6708v.6708l.6708.6708v1.3417h.6708l.6708-.6708,2.0125.6709,2.0125,2.0124-1.3416.6709-1.3417,2.0124h.6708l2.6833.6708,2.6833-.6708.6708-2.0125v-1.3417l.6708-.6708h.6708l.6708-.6708h.6708l2.6833,1.3417,2.0125,1.3417-1.3417-2.6833-1.3417-2.0125,1.3417-1.3417h1.3417l-1.3417-.6708-1.3417-1.3417h.6708l.6708-.6708.6708-.6708-.6708-.6708h2.6833v.6708l.6708.6708,2.0125.6708,1.3417.6708v.6708l.6708.6708.6708-.6708H182.58l2.0125.6708v-.6708h0v-.6708l-.6708-1.3416,1.3417-.6709v-1.3417l-2.0125-1.3417-2.6833-2.0125,1.3417-1.3417.6708-.6708.6708-1.3417V253.68h.6708l.6708-.6708h1.3417l.6708-2.6833v-3.3541l-.6708-1.3417v-.6708l-.6708-.6708-1.3417-.6708h-.6708l-.6708.6708-3.3542-2.0125-3.3541-2.6833v-.6708H174.53l-.6708.6708Z\"\r\n    },\r\n    {\r\n        title: \"Чукотский автономный округ\",\r\n        id: \"RU-CHU\",\r\n        path: \"M591.7859,92.01h-.6708l-.6708,2.0125,2.6833,1.3417,1.3417-.6708,1.3417-1.3417-.6708-.6708-.6708-1.3417h-1.3417Zm18.7832-42.5977-2.0125,1.3417v.9392l-.6708.4025-.6708.5367-.6708,2.8846.6708,2.9516.6708,1.5429,1.3417.805.6708.3354h0l1.3417-3.69,2.0125-1.0733.6708-.6708v-.805l1.3417-2.8846-.6708-2.8846-1.3417.2012Zm45.6164,13.9533-.6708,1.0733-.6708.7379-.6708.6708.6708.1342.6708-.47,1.3417.3354,1.3417.5367V67.86H659.54l1.3417.6708H659.54v1.3417h-.6708l-.6708-.6708-.6708.6708h-2.0125V68.5311L654.173,67.86,651.49,65.9148l-.6708-.1342h-.6708v1.4087l-.6708-.2012V66.72l-.6708-.8721-1.3417-.6708-1.3417.4025-.6708.6708,2.0125.3354-.6708.6037-1.3417,1.3417-.6708-1.3417-.6708-.7379-.6708.6037-1.3417.805-.6708-.6708-.6708-.1342-2.0125.805-2.0125,1.3417-.6708-.6708H635.39l-1.3417.6708-1.3417.6708-.6708-.6708-1.3417-.6708-2.0125.6708-2.0125,1.3417h-3.3541l-.6708.6708-1.3417.6708h0v-.6708h.6708v-.6708h-.6708l-1.3417.6708-.6708.6708-1.3417.6708h-1.3417l-.6708.6708-2.0125.6708-2.0125.6708H611.24V75.91l-.6708-.6708h-.6708l-2.6833,3.3541-.6708.6708-1.3417,1.3417h-1.3417l.6708.6708v.6708H603.19l-1.3417.6708h0l-.6708.6708-1.3417.6708-2.0125,1.3417-2.0125.6708.6708.6708.6708.6708.6708,1.3417v2.0125h1.3417l.6708-.6708L603.19,92.01l.6708,3.3542-.6708,1.3417v1.3417h-2.0125l-1.3417-1.3417-2.0125.6708-2.0125.6708-1.3417-1.3417-3.3541-1.3417-.6708.6708v3.3541l-1.3417,1.3417h-1.3417l-1.3417.6708-.6708.6708-1.3417,1.3417-2.0125.6708-1.3417-.6708v.6708h0l-.6708.6708-.6708.6708H579.04l-.6708,1.3417v.6708l-.6708.6708-.6708.6708h0l.6708,1.3417.6708.6708h.6708l.6708.6708h0l.6708,1.3417h.6708l1.3417.6708v1.3417l1.3417,2.0125.6708,1.3417-1.3417.6708-.6708.6708-4.6958,5.3666-3.3541,4.6958.6708.6708.6708.6708-.6708,1.3417v1.3417l4.025,2.6833,4.025,1.3417v.6708l-.6708.6708,1.3417,2.6833,1.3417,2.0125H587.09l1.3417.6708h0l.6708,2.6833h2.0125l1.3417-.6708h2.0125l2.0125.6708h2.6833l2.0125-1.3417,2.0125.6708h3.3541l1.3417-1.3417,2.0125-1.3417-.6708-1.3417,1.3417-1.3417.6708-.6708,1.3417-.6708h2.0125v-.6708l2.6833-1.3417h.6708l1.3417-.6708,1.3417-1.3417.6708-.6708h0l1.3417-.6708h1.3417l.6708.6708h0l2.0125-.6708,2.0125-.6708h1.3417l.6708.6708h3.3541l.6708,3.3541.6708,4.025,2.6833-.6708h2.6833l2.6833.6708,2.0125.6708h.6708l.6708-.6708h.6708l.6708-.6708v-2.0125l.6708-.6708,1.3417-.6709,6.7083-8.05.6708.6708,1.3416,1.3417,1.3417-.6708h1.3417v.6708l.6708.6708.6708-2.0125v-2.6833l1.3417-4.025,1.3417-4.025h-1.3417v-.6708l-.6708-.6708h.6708v-.6708l1.3417,1.3417h0l3.3541-2.0125,3.3541-2.0125-.6708-.6708v-2.6833l-2.0125-.6708-2.0125-.6708v-1.3417l-2.0125.6708-2.0125-.6708-3.3541-2.0125-4.025-2.0125-.6708,2.0125-2.6833.6708-1.3417-1.3417-.6708-.6708-.6708,2.0125v.6708h-1.3417v1.3417l-.6708-.6708.5779-.6708h-2.59l.2221.6953.4487,1.3172-1.3417.6708-.6708.6708.6708-1.3417.6708-.6708v-.6708l-.6708-1.3417h.6708l4.025-2.0125-.6708-.6708v-.6708h2.6833l2.6833-2.0125,1.3417-4.025-.6708-4.025-1.3417-4.025h-2.0125l-2.6833-.6708-.6708-2.0125.6708-1.3417h-.6708l-.6708-.6708,1.3417-.6708.6708.6708V82.6185L651.49,84.631l.6708,2.0125h1.3417l.6708-.6708h.6708l1.3417,2.6833.6708-.6708.6708-.6708,1.3417-3.3541,1.3417-2.0125,1.3417-.6708,2.0125-.6708,2.0125,1.3417,1.3417.6708,2.6833-.6708,2.0125-1.3417.6708-.6708.6708-.6708,2.0125.6708,2.0125-.6708V77.9227l-.6708-.6708v-.6708l1.3417,1.3417.6708.6708.6708-1.3417L677.652,75.91h.6708l.6708-.6708v-.6708H677.652l-1.3417.6708-.6708-.6708-.6708-.6708v.6708h-.6708l.6708-1.3417V70.5436l-.6708-.6708-.6708-.6708-1.3417-.6708h-3.3541l1.3417-.6708,1.3417-.6708,1.3417-1.14.6708-1.4758v-.47l-1.3417.2012-1.3417-.47,1.3417-.47,2.0125-1.2075-1.3417-.8721-.6708-.6708V56.7916l-.6708.2012-.6708.5367-.6708.1342-.6708.0671-2.0125.5367-1.3417.47-3.3541.0671h-2.0125L659.54,60.4811l-.6708,1.6771-.6708.5367v.1342l.6708.5367v.5367L657.5271,63.5l-.6708-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Республика Крым\",\r\n        id: \"RU-CR\",\r\n        path: \"M3.2211,228.5559,4.9835,226l-1.367-3.4143-1.3286-.745-.1492-.894,3.0739.1544L8.43,221.75l2.1617,1.8118L10.204,220.93l1.7109,1.9765.2154.9041,2.0078,1.818.966,2.4822-.7809,2.0209-.3541,3.8155,1.26.3436.9293-.1327.2784,1.1469,1.2335.2693,1.6382,2.1686-1.9882.0265-.7228,1.2071L13.7955,236.65l-.6446-1.5971-1.5388-.1442-3.1693-1.234L6.2968,233l-2.7975.0827Z\"\r\n    },\r\n    {\r\n        title: \"Чувашская Республика\",\r\n        id: \"RU-CU\",\r\n        path: \"M122.8759,205.38l-.6708-.6708h-2.0125l-.6708.6708-1.3417.6708h0v2.0125l.6708,1.3417h-2.0125l-1.3417.6708v.6708h-.6708v.6708h.6708l-.6708,2.6833,1.3417,2.0125,2.0125,1.3417.6708-.6708h.6708l.6708.6708h2.6833l.6708-2.0125-.6708-.6708v-.6708l3.3541-.6708h0v-.6708h2.0125l-.6708-2.0125v-1.3417l-.6708-.6708v-.6708l-.6708-2.0125-3.3541-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Республика Дагестан\",\r\n        id: \"RU-DA\",\r\n        path: \"M63.3733,283.8674l-1.4087-2.0125-2.0125-3.3541-1.0733-.6708-.47-.6708-1.2075.6708-1.8783,1.3417-.9392-.6708-1.0062.6708H53.78l-.1342,1.3417H51.3655l1.0062.6708-.3354,2.0125h.3354l.1342.6708.0671.6708.9392.6708h.8721l-.2012.6708-.0671.6708h2.2808l.3354,1.3417-.2012,1.3417-1.4758.6708-1.6771.6708-1.14,2.0125-.6708,1.3417h-2.415l-.2683.6708-.7379-.6708H46.67l-1.4087.6708-.805.6708L43.45,296.6132l1.3417,3.3541,1.7442,2.6833.47,4.6958,1.4758,4.025h1.61l1.7442-.6708h2.2808l1.9454-1.3417v-6.0375l.6708-6.0375,3.8237-3.3542,1.6771-.6708-.2683-.6708h-.9392l.2683-2.0125.2683-2.0125-1.0062-3.3541,2.8175-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Республика Ингушетия\",\r\n        id: \"RU-IN\",\r\n        path: \"M47.4746,283.8674l-.5367-.6708h-.8721l-.2012-.6708h-.3354l-1.0733,1.3417-.7379,1.3417.6708.6708-.5367,2.0125-.7379.6708,1.8783.6708,2.1467-.6708h0l.2683-.6708h.1342l1.4087-2.6833-1.4758-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Иркутская область\",\r\n        id: \"RU-IRK\",\r\n        path: \"M405.966,224.8344h-2.0125v2.6833h-.6708l-1.3417.6708-.6708.6708-.6708.6708h0l-1.3416-1.3418-.6149.3074-.7269.3635v.6708h0l-1.3417,3.3541-.6708,3.3541.6708,1.3417.6708,2.0125-.6708.6708-.6708,1.3417.6708.6708v1.3417l-2.6833,3.3541-3.2253,3.2253-1.47.1288-.6708.6708v.6708h0l-.6708,3.3541,1.3417,5.3666,2.0125.6708,1.3417,1.3417v2.6833H390.537v.6708l-.6708.6708-.6708.6708,1.3417,1.3417,1.3417,2.0125-.6708,2.0125-1.3417,1.3417v.6708l-1.3417,2.0125h-.6708l-.6708-.6708-.6708-.6708H385.17v-1.3417H384.5l-1.3417-.6708v-2.0125l-.6708-.6708h-1.3416l-2.0126,1.3418-.6708,1.3417v.6708l-5.3666,3.3541-2.6833,5.3666h.6709V285.88L368.4,284.5381l-1.3417-4.025v-1.3417h-1.3417l-.6708.6708-.6708,2.6833h-2.6833l-1.3417-.6708h-2.0125l-2.0125-.6708-2.0125,3.3542-1.3417,3.3541,1.3417.6707.6707,1.3418v3.3541l.6708.6708-.6708.6708h-.6708L352.3,295.9422l-2.6833,2.6833-.6708,2.0125.6708,1.3417-.6708.6708-.6708.6708v1.3417l-.6708,2.0125v2.0125h-.6708l-2.0125.6708L342.9082,310.7v1.3417l.6708.6708,1.3417.6708,1.3417,2.0125,1.3417,2.0125h1.3417L352.3,320.092l3.3541,2.6833h2.6833l.6708.6708v1.3417l.6708.6708,2.6833-2.0125,2.6833-2.6833.6708,1.3417.6708,2.0125,2.6833,2.0125,3.3541,2.0125.6708,2.0125.6708,1.3417h.6708l.6708-.6708,4.6958,4.025v1.3417l.6708,1.3417.6708.6708,1.3417,1.3417V342.23l.6708,0,.6708-.6708h2.6833l2.0125-2.0125v-.6708l-4.6958-1.3417,2.0125-.6708,3.3541-1.3417-.6708-.6708-1.3417-.6708v-.6708l-.6708-.6708v-.6708l2.0125,2.0125,2.6833,1.3417,8.05-8.7208L409.32,312.042l-.6708-5.3666.6708-5.3666.6708-1.3417h1.3417l-.6708-1.3417-1.3417-.6708v-1.3414l-1.3417,0-.6708-3.3541,1.3417-1.3417,2.0125-1.3417.6708.6708h.6708l.6708-1.3417,1.3417-1.3417.6708.6708v.6708h.6708l.6708.6708h3.3541l2.0125-1.3417.6708-1.3417.6708.6708.6708.6708h3.3541l1.3417-.6708v1.3417l1.3417,1.3417h1.3417l1.3417-.6708,2.6833.6708,3.3541-1.3417,3.3541-4.025,3.3541.6711-.6708.6708h-.6708l-1.3417,1.3417,3.3543-.671.6707,0,1.3417.6708.6708-.6708,1.3417-1.3417.6708.6708h.6708v-4.025H449.57l-.6708-4.6958V277.83h.6708v-2.0125h.6708l.6708-.6708-1.3417-1.3417,1.3417-1.3417,2.0125.6708,1.3417.6708,2.6833-.6708-.6708-1.3417v-.6708l-.6708-.6708-.6708-1.3417v-2.0125l-.6708-1.3417v-1.3417l-.6708-1.3417h-6.7083V261.73l-.6708-.6708v-1.3417l-1.3417-.6708-1.3417-1.3417-2.0125-.6708h-2.6833l-2.0122,2.0127-1.3419,0-1.3417.6708L433.47,261.73l-.6708,1.3417h-1.3417l-2.6833,4.025-3.3541,3.3542.6708-2.0125-1.3417-.6708-.6708-1.3417v-.6708l-1.2084,1.2089-.8038.8038-1.3419,0H418.041v.6708H417.37l-2.0125-.6708-.6708,1.3417-3.3541.6708h-1.3417l-.6708-2.6833v-3.3541l.6708-.6708.6708-.6708v-2.0125l1.3417-4.025,1.3417-3.3541-2.0125-2.0125-.6708-3.3541,1.3417-1.3417.6708-1.3417-1.3417-2.0125-1.3417-1.3417v-3.3541l-.6708-4.6958-2.0125-2.0125-2.0122-.6707,1.3414-2.0126.6708-.6708-.6708-2.0125-.6708-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Ивановская область\",\r\n        id: \"RU-IVA\",\r\n        path: \"M117.5093,183.243l-1.3417-.6708-1.3417-.6708-.6708-1.3417-.6708-1.3417-.6708.6708-1.3417.6708-4.6958-2.6833-3.3542-1.3417-3.3541,1.3417h0l.6708,2.0125-.6708,2.6833h2.6833l.6708,1.3417.6708,1.3417,2.0125,2.0125h.6708V189.28l1.3417.6708,1.3417.6708h.6708l.6708.6708.6708-.6708,1.3417-1.3417,1.3417.6708,1.3417.6708,1.3417-.6708.6708-1.3417,1.3417-.6708h.6708v-.6708l-1.3417-2.0125h-2.0125l.6708-.6708.6708-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Камчатский край\",\r\n        id: \"RU-KAM\",\r\n        path: \"M668.3006,201.8481l1.7752-.5934,1.5823.989,3.4614-.3956-1.1868-1.1868-1.4835.4945-2.2746-.7912.2967-.989-1.879,1.2856Zm8.9307-3.5977,1.7452.0375.5919-.3855,1.7816-.1584-.1483-.3461-4.1537.3956ZM646.1231,180.56h-1.3417v8.05h.6708v-2.0125l.6708-1.3417v-1.3417l.6708-.6708.6708-1.3417Zm2.6833-42.2623-.6708.6708v2.0125h-1.3417l-.6708.6708-.6708.6708-2.0125-.6708-2.6833-.6708h-2.6833l-2.6833.6708-.6708-4.025-.6708-3.3541H630.694l-.6708-.6708h-1.3417l-2.0125.6708-2.0125.6708-.6708-.6708h-1.3417l-1.3417.6708h0l-.6708.6708-1.3417,1.3417-1.3417.6708h-.6708l-2.6833,1.3416v.6708h-2.0125l-1.3417.6708-.6708.6708-1.3417,1.3416.6708,1.3417.6708.6708,1.3417,2.6833v2.6833l1.3417,2.0125,2.0125,2.0125v1.3417l.6708,1.3417v.6708l.6708,1.3417,1.3417,1.3417,2.6833,1.3417,0,1.3165,0,1.3669.6708.6708h.6708v2.0125l.6708.6708.6708,1.3417h.6708l.6708-.6708v-.6708l.6708.6708h1.3417v-2.0125h-2.0125l-1.3417-2.6833v-1.3417l-.6708-.6708-.6708-2.0125,2.0125-1.3417.6708-2.0125h3.3541l-1.3417,1.3417-.6708,2.6833,1.3417,2.0125,1.3417,2.0125v1.3417l.6708,1.3417h1.3417l.6708,2.0125v1.3417l.6708.6708.6708.6708-.6708,1.3417-1.3417,1.3417h0v2.0125l-.6708.6708-.6708,1.3417v2.0125l.6708.6708-.6708,4.025v3.3541l-.6708.6708v.6708l-.6708,2.6833v2.6833l.6708.6708.6708.6708v.6708l-.6708.6708v4.025l-.6708,2.6833-.6708,2.6833-.6708,1.3417-.6708.6708v2.0125l-1.3417.6708-1.3417.6708,1.3417.6708,1.3417,2.0125v4.025l-.6708,3.3541,1.3417,4.025,2.0125,4.025,9.3916,12.7458,12.0749,12.0749,2.0125,3.3541,2.6833,2.6833,2.0125,1.3417h0l.6708-3.3541v-3.3541l.6708-.6708.6708-2.0125-.6708-6.0375-1.3417-1.3417h-.6708v-1.3417l-.6708-1.3417h-.6708l-.6708-.6708.6708-.6708,1.3417.6708h0l2.0125-4.6958,1.3417-.6708h.6708v-.6708l-3.3541-2.6833-1.3417-4.025V226.176l2.0125-3.3541h.6708l.6708.6708,1.3417-2.6833v-2.0125l-2.0125-1.3417-2.0125-1.3417-2.0125-4.6958.6708-4.6958v-.6708l-.6708-.6708.6708-1.3417.6708.6708v2.0125h1.3417l.6708-2.0125-3.3541-2.6833v-.6708l-.6708.6708-.6708.6708-2.0125-2.0125-1.3417-2.0125v-2.0125l-.6708-2.0125h-3.3541l-.6708.6708.6708.6708-1.3417.6708-1.3417-.6708-2.0125-6.0375v-4.025l-.6708-.6708h.6708v-.6708h-.6708v-2.0125l-.6708-.6708h-.6708l-.6708-3.3541,1.3417-2.6833.6708-.6708-.6708-.6708h2.0125l1.3417.6708.6708-2.0125-1.3417-.6708v-.6708l1.3417-2.6833.6708-2.6833.6708.6708,2.6833,4.025v-4.6958l.6708-3.3542,2.0125-4.025,2.6833-1.3417,3.3541-1.3417,2.6833,1.3417h2.0125l-.6708-2.0125-1.3417-2.0125.6708-1.3417.6708-2.0125v-3.3541l.6708-.6708-.6708-1.3417H659.54l.6708-.6708h.6708l-.6708-.6708-.6708-.6708h.6708l.6708-2.0125-.6708-.6708H659.54l.6708-.6708.6708-.6708v-2.0125h-.6708V135.614h.6708l.6708-1.3417v-1.3417l.6708-.6708-.6708-.6708v-.6708h-1.3417l-1.3417.6708-1.3417-1.3417-.6708-.6708-6.7083,8.05Z\"\r\n    },\r\n    {\r\n        title: \"Кабардино-Балкарская Республика\",\r\n        id: \"RU-KB\",\r\n        path: \"M41.2359,275.1466l-.3354-.6708-1.7442-.6708H35.7351l-2.6162,2.0125,1.8112,2.6833.9392,3.3541h.6037l.6037.6708,1.5429-.6708,1.4758-.6708.5367.6708.4025.6708.7379-.6708h.6708l.5367.6708h.805l1.0062-.6708.805-2.0125h.6708l.5367-.6708h-.3354l-.7379-.6708-1.2746-1.3417H42.98l-1.8783-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Карачаево-Черкесская Республика\",\r\n        id: \"RU-KC\",\r\n        path: \"M38.2172,267.0967l-1.0733-1.3417H36.0705l.0671.6708-2.415,1.3417-1.0733-1.3417-1.0733-2.0125-2.2808,1.3417-2.2137,1.3417,2.3479,4.6958,3.69,4.025,2.6162-2.0125h1.8783l.805-1.3417.5367-.6708h-.7379l-.2683-.6708,1.14-.6708h1.5429l.2683-.6708-.8721-.6708h-.9392l-.8721-2.0125Z\"\r\n    },\r\n    {\r\n        title: \"Краснодарский край\",\r\n        id: \"RU-KDA\",\r\n        path: \"M41.84,242.9468l-3.0187-1.3417-2.08-.6708.3354-.6708.8721-.6708-.2683-.6708.1342-.6708-.7379-.6708h-.9392v.6708l-.2012.6708h-.0671l-.6037-.6708L34.93,237.58l-.9392-.6708h-.8721l-.4025-.6708-.47-.6708v4.025l.2012,3.3541-.3354-.6708h-.3354l-.0671-1.3417v-.6708l-.8721.6708-.9392.6708v-.6708h.2683l-.47-.6708-1.2746.6708-1.2075.6708H25.74l-.8721.6708H23.7944l-1.8112-1.3417-1.14-2.0125-.2012,1.3417.1342.6708-1.14-.6708H18.696l.805,1.3417.6708,2.6833-.47,1.3417.1342,1.3417.47.6708h.805l.0671,2.0125-.0671,1.3417,1.4087,4.025.4025,4.6958.1342,5.3666H25.27l.8721,1.3417.5367.6708h.47l2.1467-1.3417,2.2808-1.3417,1.0733,2.0125,1.0733,1.3417,2.415-1.3417-.0671-.6708h1.0733l-.0671-2.6833h.3354l.2683.6708,1.0733-.6708L39.76,261.73l-.5367-.6708.4025-1.3417-.6037-2.0125.5367-2.0125.8721-1.3417,1.0062.6708,1.2075.6708.3354-.6708.3354-1.3417.3354-.6708-.0671-1.3417h.4025l.3354-.6708h-1.14l-1.5429-2.6833.3354-.6708.2683-.6708-.2683-.6708L41.84,245.63h.47l.6037-.6708-.2683-1.3417-.805-.6708Zm-9.3245,8.7208.3354,2.0125,1.8783,2.0125.6708,3.3541-.805.6708-.4025.6708-.3354.6708-.3354.6708H32.4481l.2683-1.3417.2012-1.3417-1.4758.6708-.8721,1.3417-.5367.6708h-.6037l-.8721,2.0125-1.3417.6708-1.3417-1.3417-.805-2.0125.2683-.6708.6708-.6708h.5367l.2683.6708-.1342.6708h.8721l.6708-.6708-.2012-.6708-.1342-1.3417,1.5429-1.3417h1.5429l.2012-2.0125-.47-2.0125H29.966l-.6037,1.3417H28.96l-1.0733-1.3417-1.2075-1.3417-.3354-.6708-.2012-.6708.5367-.6708.6708.6708,1.0733,1.3417,2.2808.6708Z\"\r\n    },\r\n    {\r\n        title: \"Кемеровская область\",\r\n        id: \"RU-KEM\",\r\n        path: \"M303.3291,284.5383h-4.6958l-.6708.6708-.6708-.6708h-.6708l-1.3417,1.3417-.6708.6708h-.6708l-.6708-.6708-1.3417.6708h-1.3417l-.6708,1.3417v.6708l.6708,2.0125v2.0125l.6708.6708-.6708,1.3417-.6708,1.3417.6708,1.3417v1.3417l-.6708.6708-.6708,1.3417,1.3417,1.3417.1364,1.41,1.2053.6025h.6708v1.3417l.6708.6708.6708.6708.6708.6708v2.0125l.6708,1.3417,1.3417.6708.6708.6708-.6708.6708-.6708,1.3417.6708.6708v.6708l-.6708.6708.6708,1.3417v2.0125l1.3417,1.3417.6708.6708h.6708l.6708-.6708.6708.6708.6708.6708h1.3416v2.0124l2.6833-1.3417,2.6833-2.0125-.6708-2.0125-.6708-1.3417.6708-1.3417-.6708-2.0125v-1.3416l1.3416-1.3417h.6709l.6708-1.3417-.6708-1.3417.6708-.6708.6708-.6708-1.3417-1.3417h-2.0125l.6708-2.6833.6709-2.0124v-3.3542l.6708-.6708,2.0125-2.0125,2.0125-.6708V293.93l-.6708-6.0375-.6708-.6708-.6708-.6708.6708-1.3417h.6708l-.6708-.6708v-.6708h-2.6833l-2.0125,1.3417-1.3417-.6708L304,283.8674l-.6708.6708h0Z\"\r\n    },\r\n    {\r\n        title: \"Калининградская область\",\r\n        id: \"RU-KGD\",\r\n        path: \"M20.5073,116.16Zm3.0187-.6708.805-.6708-.805.6708-.7379.6708h.0671Zm6.6412,2.0125h0l-3.8237-.6708-.9392-1.3417-1.0733-.6708-.805.6708-.6708.6708h.2683l.7379,2.0125-1.5429-.6708-2.0125-.6708,2.8175,5.3666,3.22,4.6958,1.8783,2.6833h.6037l.7379-.6708,2.3479-.6708-.6037-4.6958-.2012-2.0125-.0671-2.0125-.3354-.6708h-.8721l-.7379.6708-.7379.6708-1.2075-1.3417-.47-1.3417h3.4883Z\"\r\n    },\r\n    {\r\n        title: \"Курганская область\",\r\n        id: \"RU-KGN\",\r\n        path: \"M202.0338,247.6426H198.68l-2.0125,1.3417-1.3417-1.3417-.6708-.6708h-1.3417l-1.3417-1.3417-1.3417-.6708-2.0125.6708-2.0125,1.3417v3.3541l-.6708,2.6833h-1.3417l-.6708.6708h-.6708v.6708l-.6708,1.3417-.6708.6708-1.3417,1.3417,2.6833,2.0125,2.0125,1.3417v1.3417l-1.3417.6708.6708,1.3417h0v1.3417l3.3541.6708,3.3541.6708,1.3417.6708.6708.6708.6708-.6708.6708-.6708h1.3417l2.0125.6708.6708.6708,5.3666.6708,5.3666.6708.6708-.6708.6708-.6708h.6708l1.3417.6708.6708-.6708h.6708l-1.3417-2.6833-.6708-2.0125h-.6708l-1.3417-.6708-.6708-.6708-.6708-2.0125L207.4,258.3758l-.6708-.6708-.6708.6708-.6708-.6708v-.6708h-2.0125v-2.6833l-1.3417-.6708-1.3417-.6708v-2.6833l.6708-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Хабаровский край\",\r\n        id: \"RU-KHA\",\r\n        path: \"M556.2319,210.747l-1.3417-1.3417-.6708-.6708-.6708.6708-.6708.6708-.6708-.6708h-.671l-1.3415,1.3415-1.3417,2.0125-.6708-.6708-.6708-.6708-.6708.6708h-1.3417l-3.3541-1.3417h-2.6833l-.6708,4.025v4.025l-.6708.6708-1.3417.6708V221.48l-.6708.6708v.671l-.6707.6707v.6708l-.6708,2.6833,1.3417,2.0125.6708,3.3541.6708,2.6833,1.3417,1.3417.6708,2.0125-.6708.6708-1.3417-1.3417-.6708.6708v.671l-.6708,2.6833-3.354,2.0124h0l-1.3417.6708H530.74l-1.3417-.6708h0l-.671,1.3418v1.3415l-.6708.6708-3.3541,1.3417-3.3541,1.3417h-1.3417l-1.3417,1.3417-.6708,1.3417-.6708,4.025-.6708,2.0125.6708,2.6833h-2.0125l1.3417,2.0125,2.0125,1.3417-.6708.6708-.6708.6708v2.0125l-1.3417.6708-.6708,1.3417h1.3417l.6708.6708,1.3417.6708.6708,1.3417v1.3417l-.6708.6708-1.3418.671V277.83l-.6708,3.3541,2.6833.6708,2.0125-1.3417.6708.6708h.6708l1.3417-.6708.6708-.6708,1.3417.6708.6708.6708h1.3417l-.6708,2.0125-1.3417,1.3417V285.88l-1.3417,1.3417-1.3417,1.3417-.6708.6708-.6708.6708v4.025l-2.0125,1.3417v2.6833l2.0125.6708h2.6833l1.3417,1.3417,1.3417,2.0125H530.07l.6708-.6708,1.3417-.6708,2.6833-1.3417,1.3417-1.3417.6708-1.3417H538.12l2.0125-.6708.6708-.6708h.6708l.5977.1994,1.4146.4715.671,2.0123v2.6833l.6708,1.3417v1.3417l-.6708.6708h-2.6833l-3.3541.6708h0l.6708,1.3417v2.6833l-1.3417.6708-1.3417.6708-.6708.6708-.6708,1.3417v1.3417l-2.0125,1.3417L530.74,316.067l.6708,1.3417v.6708l-.6708,1.3417-.6708,2.0125v4.025l.6708-.6708h0l.6708.6708v.6708h.6708l.6708-.6708.6708.6708V326.8h.6708l1.3417.6708v4.6958l.6708,2.0125v2.0125L538.79,334.85h.6708l.6708-.6708.6708-1.3417h1.3417l1.3417.6708,1.3417-.6708h1.3417l.6708.6708,2.0124,2.0127.6709,0,1.3417.6708h2.0125l1.3416-1.3414.6709,0h2.0125l1.3417-.6708.6708,1.3417h0l.6708,1.3417-2.0125,1.3417-.6708,1.3417.6708,1.3417.6708.6708,1.3417,1.3417-1.3417,2.0125-.6708.6708v3.3542l.6708,3.3541,1.3417-1.3417v-1.3417l.6708-2.0125,1.3417-2.0125h.6708l.6708.6708.6708-.6708.6708.6708v1.3417l.6708-.6708.6708-.6708.6708.6708.6708.6708,3.3541-1.3417,2.6833-2.0125v-2.6833l2.6833-1.3417,1.3417-4.025h-2.6833l-.6708-.6708V334.85l-.6708-.6708-.6708-.6708v-.6708h1.3417l1.3417-2.0125,2.6833-1.3417h0l.6616.5529,1.3509,1.46.6707,1.3414-.6708,1.3417v1.3417l1.3417.6708h2.0125l1.3417-6.0375,1.3417-4.6958v-.6708l-.6708-1.3417v-2.6833l-.6708-.6708v-2.0125l-.6708-2.0125-.6708-1.3417-.6708-1.3417v-2.0125h0L579.04,301.98v-1.3417l.6708-3.3541L579.04,294.6l.6708-1.3417-.6708-.6708-.6708.6708-1.3417-2.0125v-2.0125h-.6708l-.6708-.6708-2.6833-1.3417h2.0125l.6708-1.3417-.6708-1.3417h-1.3417l-1.3417-.6708h0l-.6708-.6708h-2.0125l-2.0125-1.3417v-.6708l-1.3417-.6708h-.6708l-.6708-.6708H563.611l-.6708.6708-.6708.6708-2.0125.6708h-.6708l.6708,1.3417v5.3666l-.6708-1.3417V284.538h0l-1.3417,2.6833-3.3541,3.3541V288.563l1.3417-2.6833h-.6708l-.6708.6708h-.6708l-1.3417-.6708.6708-.6708.6708-.6708v-.6708l-2.0125,2.0125.6708.6708v2.0125h-1.3417v.6708h0l-1.3417-3.3541-2.0125-3.3541-4.6958,2.0125-3.3541-1.3417,1.3417-2.0125.6708-1.3417,1.3417-2.0125.6708-2.0125.6708-1.3417.6708-.6708,2.0125-3.3541.6708-4.025.6708-.6708.6708-.6708v-.6708l-.6708-.6708.6708-1.3417v-2.0125l.6708-.6708,1.3417-3.3541,1.3417-2.6833.6708-1.3417v-1.3417l.6708-.6708.6708-1.3417V245.63l.6708-2.6833,1.3417-1.3417.6708-5.3666,3.3541-4.6958h.6708l.6708-.6708.6708-.6708.6708-.6708,3.3541-1.3417,3.3541-2.0125h.6708l.6708-.6708h.6708v1.3417l1.3417.6708.6708-1.3417-.6708-2.0125h2.6833v-2.0125l-2.0125-2.0125-2.6833-1.3417h-2.6833l-2.0125-.6708v-2.6833l2.0125-.6708-.6708-1.3417v-1.3417h.6709l-2.0126-4.025L562.94,205.38l-2.6833.6708-3.3541.6708v2.0125l-.6708,2.0125Z\"\r\n    },\r\n    {\r\n        title: \"Ханты-Мансийский автономный округ - Югра\",\r\n        id: \"RU-KHM\",\r\n        path: \"M261.0669,209.4051l-1.3417-2.0125-3.3543.6711-3.3541-.6708V202.697l-1.3416-1.3419-.6709-1.3414v-2.0125l.6709-1.3419.6707-.6706-1.3417-1.3417h-.6708l-.6708-.6708v-.6708h-1.3417l-.6708.6708h-.6708l-2.0124-.6711-1.3418.6711-1.3417.6708h0l-2.0125-2.0125-1.3417-2.0125,1.3417-.6708.6708-.6708L239.6,188.61l-.6708-.6708-2.0125-1.3417-2.0125-.6708h-.6708l-.6708.6708-.6708-.6708v-.6708H231.55l-1.3417.6708-.6708-.6708h-2.0125l-.6708-1.3417.6708-1.3417-2.0125-.6708-.6708-1.3417.6708-1.3417h1.3417l.6708-2.0125,1.3417-2.0125v-.6708l-.6707-1.3419v-1.3415l-.6708-2.0125-1.3417.6708-2.0125.6708v.6708h0l-1.3417.6708-1.3417.6708-1.3417.6708-.6708-1.3417v-.6708h-1.3417l-1.3417.6708h-.6708l-.6708.6708h0l-1.3417.6708-.6708.6708-.6708,4.025-2.6833,2.6833-2.6833,2.6833-1.3417,2.6833-1.3418,2.6832v.6708l.671.671-.6708,1.3417h-1.3417l-.6708,2.0125-.6708,1.3417v.6708l.6708.6708v2.0125l2.0125,1.3417,2.0125,1.3417,2.0125,4.6958.6708,1.3417,1.3417,2.0125-1.3417,2.6833-.6708,2.6833-.6708,1.3417v2.0125h0l1.3417.6708v1.3417l-.6708,2.6833-.6708,2.6833,2.0125,1.3417,2.0125,1.3417v7.3791l.6708.6708,2.0125.6708h2.0125l.6708-1.3417,1.3417-.6708h.6708l.6707.6708h3.3543l1.3417.6708h.6708l.6708-.6708.6708-.6708,2.6833-.6708,1.3417-2.0125.6708-.6708h1.3417l.6708,1.3417.6708.6708h2.0125l2.0125.6708.6708.6708H239.6l.6709.6708,1.3417,2.0125.6708,2.6833h.6708l.6708.6708v.6708l-.6708.6708,1.3417,1.3417h.6708v3.3542l1.3417.6708,2.0125,1.3416.6708.6708.6708.6708h2.0125l1.3417,1.3417,2.6833-2.6833,2.6833-2.6833h4.025l2.0125-3.3541.6708-2.6833.6708-.6708h.6708l.6708-1.3417-.6708-1.3417.6708-.6708.6708.6708,2.6833.6708,2.6833.6708.6708.6708.6708.6708,1.3417-.6708h1.3417v1.3417l1.3417,1.3417h2.6833l2.6833-.6708v1.3417l1.3417,1.3417h2.0124l.6708.6708,1.3417.6708.6708-.6708h.6708l2.0125-1.3417,1.3417-.6708,2.0125,1.3417,2.0128.6707,5.3663-1.3415,4.6961-2.6834-1.342-1.3415L304,237.58l-.6708-4.6958-1.342-2.6832-1.3417-1.3417h-2.6833l-1.3417-2.0125-1.3417-2.0125h-2.6833l-2.0125-2.0125v-2.0127h-.6708l-2.6833,1.3417-4.025,1.3419-1.3417-.6708-1.3417-.6708h-4.6958l-1.3417-1.3417-.6708-2.6833-3.3541-2.0125-2.6833-2.0125-3.3541-.6708-1.3417-.6708-1.3417-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Кировская область\",\r\n        id: \"RU-KIR\",\r\n        path: \"M153.0633,173.8513l-3.3541-.6708-1.3417,1.3417-2.6833,2.0125-1.3417-.6708-1.3417.6708v1.3417l.6708.6708h2.0125l-.6708.6708-.6708.6708.6708,1.3417-1.3417,1.3417-.6708,1.3417-.6708,2.0125v2.0125l-1.3417.6708H138.305v.6708l-1.3417-.6708h-.6708l-2.0125,1.3417-1.3417.6708,2.0125,2.6833,2.0125,2.6833-.6708.6708h0l-1.3417.6708-1.3417.6708-2.6833-1.3417-.6708.6708-.6708,1.3417-.6708.6708-.6708.6708.6708.6708.6708.6708.6708,1.3417h2.0125l1.3417,1.3418.6708-.6709h.6708l.6708.6708,1.3417.6708v.6708h0l.6708-.6708h1.3417v.6708l-.6708,1.3417.6708.6708h.6708v2.6833l.6708.6708-.6708.6708-.6708.6708,2.0125.6708-.6708,2.0125v1.3417h.6708v.6708h-.6708l.6708,2.0125,1.3417.6708.6708-2.0125.6708-2.6833h1.3417l.6708-.6708.6708-2.6833,1.3417-2.0125h1.3417l.6708.6708h1.3417l1.3417-.6708,1.3417-4.025,2.6833-1.3417,1.3417,1.3417,1.3417.6708h1.3417l.6708.6708v.6708l.6708.6708,1.3417.6709.6708-1.3418,1.3417-.6708.6708-2.0125.6708-.6708-1.3417-1.3417v-2.0125l3.3541-2.0125,2.0125-2.6833-2.6833-2.0125-2.6833-2.6833v-.6708h-2.0125l-2.6833.6708-2.0125-.6708-2.6833-1.3417v.6708h-1.3417l-1.3417,1.3417-2.0125,1.3417v-1.3417l.6708-.6708-.6708-2.0125v-1.3417h0l-.6708-1.3417-1.3417-1.3417,1.3417-2.0125,2.6833-.6708v-2.0125l2.0125-3.3541-1.3417-1.3417-.44-.88Z\"\r\n    },\r\n    {\r\n        title: \"Республика Хакасия\",\r\n        id: \"RU-KK\",\r\n        path: \"M317.4165,301.98l-1.3417-1.3417-1.3417.6708h-2.0125l-2.0125-2.0125-2.0125-2.0125-.6708.6708v3.3541l-.6708,2.0125-.6708,2.6833h2.0125l1.3417,1.3417-.6708.6708-.6708.6708.6708,1.3417-.6708,1.3417h-.6708l-1.3417,1.3417v1.3417l.6708,2.0125-.6708,1.3417.6708,1.3417.6708,2.0125-2.6833,2.0125-2.6833,1.3417-1.3417,1.3417-1.3417.6708v2.0125l-.6708.6708v.6708l.6708,2.0125,2.0125.6708,1.3417-.6708,1.3417-.6708,2.6833.6708h2.6833v-3.3541l2.0125-.6708,2.0125-.6708.6708-2.0125,1.3417-1.3417.6708-.6708h1.3417l1.3417-2.6833v-.6708l1.3417-.6708,1.3417-1.3417v-.6708l-.6708-.6708-.6708-.6708v-.6708h0l-.6708-.6708,1.3417-3.3541-1.3417-4.025-.6708-4.025-2.0125-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Республика Калмыкия\",\r\n        id: \"RU-KL\",\r\n        path: \"M73.637,254.3509l-.6708-1.3417H70.9537v-1.3417l-1.0063-.6708-.47,1.3417-.8721,1.3417-2.4821-1.3417L62.8366,253.68l-.4025.6708,1.14.6708H65.587l-.9392,2.0125L62.77,258.3759l-.1342.6708-.1342.6708H59.08l-.5367,1.3417-.7379.6708h-.2683l-.3354-.6708-1.0062.6708-1.2075-.6708-2.08-4.6958-2.8846-2.0125-1.8112.6708-2.415.6708.47.6708h.6708l-.0671.6708.1342.6708.805-.6708h.8721l.2012.6708-.4025.6708h4.025l.6037,2.0125.5367,1.3417,1.0062,1.3417.805,1.3417-.47,3.3541.4025,1.3417.9392,1.3417,1.5429,3.3541.5367,3.3541.47.6708,1.0733.6708,2.0125,3.3541,1.4087,2.0125h.7379l.47.6708.5367-.6708H65.52l2.08-1.3417,2.2137-.6708.47-.6708h.6708v-.6708l-.47-.6708-.47-.6708H68.6729l-.2683-.6709.6037-2.0125,2.2808-.6708-.47-.6708-.6708-.6708.2012-.6708.2683-.6708-.6708-.6708-.1342-.6708h2.4821l2.415-.6708.2683-2.6833.3354-3.3541,1.4758-.6708h1.14l-1.4087-1.3417H74.7774l-.6708-1.3417-.2012-2.0125.6037-1.3417.8721-.6708-.5367-.6708-.805-.6708-.4025-2.0125Z\"\r\n    },\r\n    {\r\n        title: \"Калужская область\",\r\n        id: \"RU-KLU\",\r\n        path: \"M77.435,174.4838l-.5869.0246-1.1986-.657-5.1654,1.3417-.6708-.6708-.6037-.6708-.6038.6708h-1.14L66.4591,172.51l-1.4087-.6708-.6037.6708-.47.6708H62.9037l-1.14.6708.4025,2.6833.6708,3.3541L61.7633,181.23l-.6708.6708,1.5429,2.6833,2.6833.6708,2.6833.6708.47-.6708.3354-.6708,1.14-.6708h1.3417l.2683-.6708h.2012l1.5429.6708,1.61.6708.3354.6708h.5367l.7379-.6708.2013-.6708H78.467l.9392-.6708.8339-.0254.5313-1.3388.68-.68-.7034-3.3224-2.0378-.6938Z\"\r\n    },\r\n    {\r\n        title: \"Республика Коми\",\r\n        id: \"RU-KO\",\r\n        path: \"M210.0838,145.0057l-4.025-3.3541-3.3542-2.6833h-2.6833l-.6708-.6708-.6708.6708-1.3417.6708-5.3666-.6708h-4.6958l-2.0125,2.6833-2.0125,2.6833-.6708,2.0125h1.3417l.6708.6708-.6708,2.0125-.6708,2.0125.6708,1.3417v.6708l-.6708.6708-.6708.6708-.6708-.6708-1.3417-1.3417h-.6708l-.6708.6708-.6708-.6708v-.6708h-.6708l-1.3417.6708-.6708-1.3416-1.3417,1.3416-.6708-.6708v-2.0125l-4.6958-3.3541-4.6958-1.3417v2.6833l1.3417,2.6833v3.3542l-1.3417,2.0125v1.3417l.6708,1.3417-2.0125.6708h-1.3417l-2.0125,2.6833-.6708,2.6833.6708.6708h1.3416l.6708.6708h1.3417v-.6708l.6708-1.3417H166.48l.6708-.6708h.6708l.6708,1.3417.6708,1.3417-2.6833,2.6833-3.3541,2.6833-.6708,2.0125-.6708,1.3417-4.025,1.3417h-1.3417l-1.3417.6708-2.0125,3.3541v2.0125l-2.6833.6708-1.3417,2.0125,1.3417,1.3417.6708,1.3417h0V188.61l.6708,2.0125-.6708.6708v1.3417l2.0125-1.3417,1.3417-1.3417h1.3417V189.28l2.6833,1.3417,2.0125.6708,2.6833-.6708h2.0125v.6708l1.3417-.6708-.6708-2.0125,1.3417-3.3541,4.025,1.3417h1.3417l1.3417,1.3417-.6708,1.3417h0l2.0125,1.3417,1.3417-.6708,1.3417,2.0125,1.3416,1.3417,1.3417-.6709h2.6833v.6708h1.3416l.6709-.6709h.6708l.6708.6708h0l1.3417-.6708,2.0125-.6708,4.025,4.025,6.7083.6708v-.6708l1.3417-.6708.6708-1.3417.6708-2.0125h1.3417l.6708-1.3417-.6708-.6708V189.28l1.3417-2.6833,1.3417-2.6833,2.6833-2.6833,2.6833-2.6833.6708-4.025.6708-.6708,1.3417-.6708h0l.6708-.6708h.6708l1.3417-.6708h1.3417v.6708l.6708,1.3417,1.3417-.6708,1.3417-.6708,1.3417-.6708h0v-.6708l2.0125-.6708,1.3417-.6708h2.0125l1.3417.6708h0l2.0125-2.0125,2.0125-.6708v-.6708l1.3417-1.3417h2.0125l2.6833-.6708h2.6833l.6711-1.3417.6706-.6708,3.1172-1.87,2.92-1.4839-.6708-2.0125-1.3417-2.0125.6708-2.6833h.6708l.6265-.8352-1.2973-.5064H248.321l-.6708.6708-1.3417.6708-1.3417.6708-1.3417.6708-1.3417.6708h-.6708l-.6708-.6708-.6708,1.3417v.6708l-4.6958,1.3417-4.025.6708-.6708-.6708-.6708-.6708-20.1249-12.0749Z\"\r\n    },\r\n    {\r\n        title: \"Костромская область\",\r\n        id: \"RU-KOS\",\r\n        path: \"M126.23,171.168l-.6708-.6708h-.6708v-1.3417l-.6708.6708-.6708.6708-2.0125-.6708-2.0125-.6708-.6708.6708v.6708l-2.6833.6708-.6708,1.3417v.6708l-4.6958,2.0125-4.025,2.6833,4.6958,2.6833,1.3417-.6708.6708-.6708.6708,1.3417.6708,1.3417,1.3417.6708,1.3417.6708-.6708,1.3417-.6708.6708H118.18l1.3417,2.0125,2.6833,1.3417h2.6833l1.3417-1.3417.6708-.6708,2.0125,2.0125v1.3417h1.3417l2.6833.6708,1.3417-.6708,2.0125-1.3417h.6708l1.3417.6708V188.61h2.6833l1.3417-.6708v-2.0125l.6708-2.0125.6708-1.3417-.6708-1.3417-1.3417-.6708-.6708.6708-.6708.6708h-.6708l-1.3417-.6708-.6708.6708h-.6708l-4.6958-3.3541-.6708-1.3417-.6708-1.3417-1.3417-.6708-.6708-.6708h0v-.6708l-2.6833-.6708v-2.0125Z\"\r\n    },\r\n    {\r\n        title: \"Республика Карелия\",\r\n        id: \"RU-KR\",\r\n        path: \"M138.305,86.6435l-2.6833-3.3541-2.0125,4.6958-2.6833,3.3541h-2.0125l-2.0125,1.3417H126.23v.6708l-.6708.6708-2.0125.6708-.6708,2.0125.6708.6708h0l-.6708.6708-2.0125,2.0125-.6708,2.6833-2.0125.6708h-2.0125l-.6708,4.6958-.6708,5.3666-8.7208,1.3417-9.3916.6708v1.3417l1.3417,2.0125v-.6708l.6708.6708h4.6958l.6708-.6708h0l.6708,6.7083L102.751,132.26h4.025l.6708.6708h1.3417l-.6708-1.3417v-.6708h.6708L110.13,132.26l1.3417,1.3417h1.3417l.6708.6708.6708,2.6833h0l.6708.6708.6708-2.0125-.6708-3.3541.6708-3.3541v.6708h.6708l.6708-1.3417.6708-1.3417v2.0125h.6708l.6708-2.0125.6708-1.3417v2.0125h0l.6708-1.3417.6708-.6708-.6708,2.0125-1.3417,2.6833h.6708l.6708-1.3417v.6708l1.3417.6708,1.3417-2.6833v-.6708h-.6708v-.6708l-.6708.6708h0l.6708-2.0125.6708-2.0125.6708,6.0375-3.3541,4.6958-.6708,2.0125-.6708,2.6833h1.3417l1.3417,1.3417,2.0125,2.0125.6708-.6708.6708-.6708.4438.4437.227.2271,1.3417-2.0125.6708-2.0125h0v-.6708l1.3417-1.3417,1.3417-1.3417-1.3417-2.0125-.6708-2.6833,1.3417-1.3417.6708-1.3417.6708-2.0125.6708-2.0125.6708.6708.6708.6708,1.3417-.6708,1.3417-1.3417V120.185l.6708-1.3417v-2.0125h-1.3417v-3.3541l.6708-.6708h0l2.6833-3.3542.6708-1.3417.6708-2.0125h.6708l.6708.6708,1.3417-1.3417.6708-.6708v.6708h.6708l.6708-4.025-1.3417-4.025h2.0125l-.6708-1.3417-.6708-1.3417.6708-.6708h-.6708l-.6708-.6708-2.0125.6708-.6708-2.0125.6708-2.0125-2.6833-3.3541Z\"\r\n    },\r\n    {\r\n        title: \"Курская область\",\r\n        id: \"RU-KRS\",\r\n        path: \"M58.5433,191.9637v-.6708l-1.14-.6708-.8721-.6708H53.8475l-.47.6708L52.17,189.28l-1.2746,1.3417-.6708.6708-1.2075-.6708-.2012.6708-.1342.6708-1.6771,1.3417,1.14,2.0125,1.5429,2.0125-.2012.6708-.3354.6708h.3354l.2012.6708H49.353l-.3354.6708,1.2746,1.3417h2.415l.6037,1.3417.7379.6708,3.1529,1.3417,4.025,2.0125.6037.6708.6037,1.3417.9392-1.3417.7379-1.3417.8721.6708H65.99v-.6708l.4025-.6708-.1342-.6708h0l-1.2746-1.3417-.4025-1.3417h-.47l-.2012-.6708H62.9037v-1.3417l.2012-.6708-.6708-.6708-.6708-.6708-.1342-2.0125-.0671-1.3417-1.2746-.6708-1.7442-.6708v-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Красноярский край\",\r\n        id: \"RU-KYA\",\r\n        path: \"M309.3666,126.8933l.6708,1.3417H312.05V124.21l-2.6833,2.6833Zm16.1-22.8082h.6708v.6708l.6708.6708.6708-2.6833-.6708-.6708h0v.6708Zm4.025-50.5135v-.6037l-.6708-.47-2.0125-.8721,1.3417,1.0733v.9392ZM340.8956,38.21l-2.0125-.5367-1.3417.6037.6708.6708h.6708l1.3417.4025ZM409.32,97.3768l.6708.6708v.6708l1.3417.6708-.6708-2.0125-.6708-.6708-.6708.6708ZM365.7163,92.01h2.0125l1.3417-2.0125h-1.3417l-.6708.6708-.6708.6708-.6708.6708Zm-.6708-33.6086.6708-1.9454-1.3417-1.3417-2.0125-.6708-.6708-.3354-1.3417.805v1.7442l1.3417.5367.6708.5367v1.3417Zm14.7582,1.0062-2.0125-3.5554-2.0125,1.4758-1.3417,2.2137-.6708.805-.6708.4025.6708-.8721.6708-.7379V58.804l-.6708.3354-1.3417.5367h0l-.6708-.1342,2.6833-1.5429.6708-2.5492-2.0125-.7379-2.6833.2683-.6708.1342V55.45h-.6708l-.6708.2683-1.3417,1.2075.6708.805v.805l-.6708.1342-.6708.0671-.6708.805-.6708,1.0062-.6708.2683v1.0062l.6708.2012V60.9507l.6708-.2012h0v1.6771l.6708-.0671.6708.2683-.6708,1.2746V65.244l.6708.4025v1.4758l.6708.7379H368.4l.6708-.6708v1.3417h2.0125l1.3417,1.3417,1.3417,1.3417,2.6833.6708,2.6833-2.0125-.6708-1.3417V67.1894l-.6708-1.2746v-.0671l.6708-.0671.6708-3.1529.6708-3.22ZM394.562,77.9227h-.6708v.6708l-.6708.6708h.6708Zm.6708,2.6833h1.3417l.6708-.6708-.6708-.6708h-1.3417l-.6708.6708v.6708ZM383.8287,66.854v-1.61l-.6708.2683-.6708.6708-.6708,1.6771v1.3417h0l.6708.6708h-.6708l-.6708.6708h0v2.0125h-.6708v-.6708l-.6708,1.3417-.6708,1.3417V76.581l-1.3417,2.0125L377.12,80.606l1.3417,1.3417,2.0125-1.3417,1.3417-1.3417H384.5l4.025-1.3417,2.0125-.6708.6708-2.0125V73.2269l-.6708-1.3417h-.6708v.6708h-.6708V71.2144h0v-.6708l-.6708-.6708-.6708-.6708V67.86l-1.3417,1.3417L385.17,71.2144v.6708H384.5v-.6708l2.0125-5.5679-1.3417-.7379-.6708-.0671V66.049Zm28.1748,35.2186v.6708l-.6708-1.3417V100.06l-.6708-.6708H409.32l-1.3417-2.0125-1.3417-2.0125-.6708.6708h0l-.6708-.6708h-.6708v.6708H401.27l-1.3417.6708-.6708-.6708h-.6708l-.6708.6708-1.3417,2.6833H394.562l1.3417-3.3541V93.3518h-4.025l.6708-.6708V92.01l-2.0125.6708-1.3417-.6708,1.3417-.6708,1.3417-1.3417.6708-.6708h.6708l.6708-.6708L392.55,87.3143l-2.0125-.6708-.6708-.6708v-.6708h-1.3417l-1.3417.6708h-.6708l-4.025,4.6958-2.6833,4.6958.6708.6708v2.0125l-4.025,1.3417-.6708-.6708h-1.3417v.6708l1.3417,2.0125.6708,1.3417H375.108l-.6708-1.3417-1.3417.6708h-.6708v.6708l-.6708.6708h-.6708v.6708h-2.0125l-.6708.6708h-.6708v-.6708l-.6708-.6708-1.3417.6708-.6708.6708.6708-1.3417.6708-.6708-4.025-1.3417-4.025.6708-.6708.6708,1.3417.6708H360.35v.6708l-1.3417.6708h-1.3417l-2.6833.6708-2.0125.6708h-4.025l-1.3417.6708h0l-2.6833,1.3417-1.3417,1.3417h-4.025l.6708.6708,1.3417.6708-.6708.6708-1.3417.6708-.6708,1.3417v1.3417l-1.3417-1.3417-2.0125-.6708v.6708l2.0125,2.0125,1.3417,1.3417-.6708.6708h0l-.6708-.6708-.6708-.6708-.6708.6708h-1.3417l1.3417,1.3417,2.0125,2.0125h0l-.6708.6708h0v4.025h-.6708l-1.3417.6708h-.6708l.6708-.6708.6708-.6708.6708-.6708v-.6708l-2.6833-.6708-2.0125.6708h-3.3542l-4.025-.6708-4.025-.6708h-2.0125l-1.3417-.6708v.6708l-.6708,1.3417-.6708.6708.6708.6708v.6708h-.6708v1.3417l.6708.6708-.6708,2.0125-.6708,1.3417v.6708h0v.6708l-.6708.6708,2.0125,2.0125,2.0125,1.3417v4.025l2.0125,1.3417.6708,2.6833L320.1,145.6765l-1.3417,2.0125.6708,1.3417-.6708,6.0375-1.3417.6708-1.3417.6708,2.0125,4.6958.6708,2.6833h-.6708v-.6708l-1.3417-.6708-.6708-.6708v-2.6833l-.6708-1.3417-.6708-.6708,2.6833-6.7083-.6708-1.3417-1.3417-.6708.6708-.6708v-.6708h0v-.6708l2.0125-1.3417,2.0125-2.6833-2.0125-1.3417-3.3542-.6708-.6708-2.0125-.6708-2.0125-2.0125-2.6833-2.0125-2.0125h-2.0125l.6708,1.3417.6708,1.3417,1.3417,1.3417,1.3417,1.3417v2.0125l-1.3417,1.3417h-2.0125v2.6833l1.3417,1.3417,1.3417,1.3417v3.3542l-.6708,3.3541h-1.3417l-1.3417-.6708-1.3417,1.3417-2.6833,2.0125h-.6708v.6708h0l-1.3417.6708v2.0125l.6708,1.3417.6708,2.0125h0l2.0125,1.3417,1.3417,1.3417h2.0125l1.3417-1.3417.6708.6708v.6708l.6708.6708.6705.6707-1.3413,8.05-1.3417,3.3541-2.6833,1.3417v1.3417h0V181.23l1.0687.797-.6168,1.0683-1.1227.818v.6708l.6705.6707.6711,2.0126.6708,3.3541-.6708,2.6833v4.6958l.6708,2.0125,2.0125.6708v1.3417h0V205.38l-.6708,1.3417h-.6708l.6708,2.0125h1.3417l.6708,1.3417,1.3417.6708,1.3417-.6708.6708,2.0125-.6708,4.025-2.6833,4.025h-1.3417l-.6708.6708v1.3417l.6708.6708,1.3417.6708-.6708,1.3417-.6708.6708v.6708l-.6708,1.3417-2.0125,2.6833-3.3541,2.6833L304,237.58l2.6833,1.3417,1.3417,1.3417-4.6958,2.6833-5.3666,1.3417v8.7208l2.5948,1.2976,2.7718-.6268,2.6833.6708,2.0125.6708,1.3417.6708v.6708l.6708.6708h.6708l1.3417,1.3417v2.0125l.6708,1.3417,2.0125.6708,1.3417,2.0125-1.3417.6708-2.0127,1.3418-.6706,2.0124v2.0125l2.6833,2.6833,1.3414,3.3542,0,.6707h-.6708v1.3417l-.6708.6708h-1.3417l-1.3417,2.6833-.4311,1.2925-.24.72v.6708l.6708.6708h-.6708l-.6708,1.3417.6708.6708.6708.6708.6708,6.0375V294.6l-2.0125.6708-2.0125,2.0125,2.0125,2.0125,2.0125,2.0125h2.0125l1.3417-.6708,1.3417,1.3417,2.0125.6708.6708,4.025,1.3417,4.025L320.1,314.0545l.6708.6708h0v.6708l.6708.6708.6708.6708v.6708l-1.3417,1.3417-1.3417.6708v.6708l-1.3417,2.6833h-1.3417l-.6708.6708-1.3417,1.3417-.6708,2.0125,1.3417.6708.6708,1.3417,4.025,1.3417,4.6958.6708,4.6958-2.6833,3.3541-4.6958,1.3417-.6708,1.3417-.6708.6708-2.0125.6708-1.3417h2.0125l.6708-.6708h.6708v.6708h1.3417l.6708-.6708,2.0125.6708,3.3541-1.3417-1.3417-2.0125-1.3417-2.0125-1.3417-.6708-.6708-.6708V310.7l2.0125-1.3417,2.0125-.6708h.6708v-2.0124l.6709-2.0126v-1.3417l.6708-.6708.6708-.6708-.6709-1.3416.6709-2.0126,2.6833-2.6833,2.0125-1.3417h.6708l.6708-.6708-.6708-.6708v-3.3541l-.6708-1.3417-1.3417-.6708,1.3417-3.3541,2.0125-3.3542,2.0125.6708H360.35l1.3417.6708h2.6833l.6708-2.6833.6708-.6708h1.3417v1.3418l1.3417,4.025,2.6834,1.3416v-3.3541h-.6708l2.6833-5.3666,5.3666-3.3541v-.6708l.6708-1.3417,2.0125-1.3417h1.3417l.6708.6708v2.0125l1.3417.6708h.6707v1.3416h1.3417l.6708.6708.6708.6708h.6708l1.3417-2.0125v-.6708l1.3417-1.3417.6708-2.0125-1.3417-2.0125-1.3417-1.3417.6708-.6708.6708-.6708v-.6708H392.55v-2.6833l-1.3417-1.3417-2.0125-.6708-1.3417-5.3666.6708-3.3541v-.6708h0l.6707-.6707,1.47-.1288,3.2254-3.2254,2.6833-3.3541v-1.3417l-.6708-.6708.6708-1.3417.6708-.6708-.6708-2.0125-.6709-1.3416.6709-3.3543,1.3416-3.354v-.671h0l1.3417-.6708.6708.6708.6708.6708h0l.6708-.6708.6708-.6708,1.3417-.6708h.6708v-2.6833H401.27l-2.6833-.6708-.6708-.6708-.6708-.6708h-1.3417l-1.3417-2.6833,1.3417-2.0125v-2.0125l1.3417-2.0125.6708-.6708.6708-1.3417-1.3417-1.3417-1.3417-1.3417-.6708-1.3417v-3.3541l-.6708-1.3417V198.672l-.6708-.6708-.6708-.6708,1.3417-1.3417,2.0125-1.3417.6708-7.3791v-9.3916l-1.3417-2.0125-.6708-2.6833V172.51l.6708-1.3417h.6708v-.6708l1.3417.6708h1.3417l1.3417-1.3417,2.0125-.6708,2.0125.6708h1.3417l1.3417-2.0125v-2.6833l1.3417-.6708.6708-.6708v-1.3417l.6708-2.0125,2.6833-2.0125,2.6833-2.0125v-.6708l-.6708-2.0125-1.3417-2.6833V148.36l-.6708-2.6833-1.3417-1.3417-1.3417-.6708-.6708-.6708v-2.0125l-.6708-.6708-.6708-2.6833.6708-2.6833-.6708-.6708V132.26h-.6708l-.6708-.6708,1.3417-1.3417.6708-2.0125.6708-.6708v-1.3417l.6708-.6708-1.3417.6708-.6708.6708-1.3417-.6708-2.0125,1.3417v2.0125h1.3417l2.0125-.6708v.6708l-.6708.6708h-.6708l-1.3417,2.0125-1.3417.6708-.6708-.6708h0l-.6708,1.3417-1.3417.6708h0v2.0125l-1.3417-.6708-.6708-.6708v.6708H394.562l-.6708,2.0125-2.0125,2.0125h-.6708l.6708-1.3417,1.3417-1.3417V135.614l.6708-1.3417,2.0125-.6708.6708-2.0125-.6708-.6708-1.3417-.6708h-.6708l4.025.6708,2.6833-2.6833h.6708l.6708-1.3417.6708-1.3417,1.3417-1.3417,1.3417-1.3417.6708-2.0125,4.025-2.6833v-.6708l.6708-.6708,1.3417-2.0125,2.0125-2.0125.6708-3.3542-1.3417-.6708-.6708-1.3417v.6708l-.6708.6708h0v-2.0125h.6708l1.3417.6708v1.3417l.6708-1.3417V104.085h-1.3417v-2.0125l-1.3417-1.3417v1.3417Zm-48.9706-51.05-.6708.1342-.6708.4025.6708.2683.6708.2012.6708.6037.6708.6708-.6708.0671-.6708-.0671v.47l.6708.1342.6708.0671.6708.7379.6708.4025,1.3417-.47.6708-.6037,5.3666-.6708.6708-.3354V49.4124l1.3417-.805.6708-.805v-.7379l-.6708-.7379v-.1342l-.6708-.3354-1.3417-3.1529-.6708-2.4821-1.3417-.0671v.9392l-3.3541,1.8783-2.6833,2.1467v1.14l.6708.2683v.6037l-.6708.6708V48.54l-.6708.7379-.6708.3354-.6708.3354v.5367l.6708.47v.2012h-.6708Zm-1.3417-11.27-.6708.8721v.6037h.6708l1.3417.6037,1.3417-1.6771Zm5.3666,60.9784-1.3417-.6708h0l.6708,1.3417,1.3417.6708v-1.3417h-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Ленинградская область\",\r\n        id: \"RU-LEN\",\r\n        path: \"M88.6636,114.8183l-1.3417.6708.6708.6708.6708.6708h1.3417l.6708.6708h-.6708l-.6708.6708v.6708h-.6708v2.6833l.6708,1.3417h1.3417l2.0125.6708,1.3417,2.6833-1.3417,2.0125-2.0125,1.3417-2.6833-1.3417-.6708-2.0125.5586-2.2342-1.2294-1.12-.6708.6708-.6708-.6708-.6708-.6708-.6708-.6708-.6708.6708h-.6708v-1.3417h-.805l-.47.6708-1.0063.6708h.3354l-.805,1.3417-1.2075-.6708-1.14.6708H76.32l.6708,2.0125.5367,1.3417.6708,1.3417.6037,1.3417-.47,2.6833,1.0062,2.0125h1.0062l1.3417-.6708.9392.6708.6708,1.3417,1.3417-.6708h2.0125v.6708l1.3417.6708,1.3417-.6708,1.3417-.6708v.6708h0l.6708.6708.6708.6708v2.6833h2.6833l.6708.6708v.6708l1.3417,2.0125v1.3417l.6708,1.3417,1.3417,2.0125h2.0125l1.3417.6708.6708-.6708.6708-.6708h1.3417l.6708-.6708h-.6708v-.6708l.6708-.6708v-2.0125l2.0125-1.3417,2.0125-.6708,1.3417-1.3417v-.6708l.6708-.6708h2.0125l1.3417-.6708-.6708-.6708h0l-.6708-2.6833-.6708-.6708h-1.3417L110.13,132.26l-1.3417-1.3417h-.6708v.6708l.6708,1.3417h-1.3417l-.6708-.6708H102.08l-.6708-.6708-1.3417,1.3417-2.0125.6708-1.3417-2.0125H94.7011l-1.3417-.6708-.6708-.6708h.6708l.6708-1.3417.6708-1.3417,1.3417-3.3541,2.0125-2.6833v-2.0125l-1.3417-2.0125v-2.0125H92.0178l-3.3541-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Липецкая область\",\r\n        id: \"RU-LIP\",\r\n        path: \"M78.4,196.66H77.3266l-.8721.6708H75.3812l-.5367.6708-.2683.6708H73.3016l-.8721-.6708-1.14-1.3417-2.8175,1.3417-.4025,1.3417-.3354.6708.0671.6708L67.6,202.0262l-.805-.6708-2.2137.6708.4025,1.3417,1.2746,1.3417,1.8783.6708,1.61.6708v.6708h-.0671l.6037.6708h.805l.6037,1.3417-.2012.6708,1.6771,1.3417,1.8112,2.0125,1.2746-.6708,1.0733-.6708-.6708-4.025,2.3479-2.6833,2.9516-2.0125-.2683-1.3417.2013-1.3417-1.5429-.6708H78.8694v-1.3417L78.4,196.66Z\"\r\n    },\r\n    {\r\n        title: \"Магаданская область\",\r\n        id: \"RU-MAG\",\r\n        path: \"M593.1275,146.3473h-.6708l-1.3417.6708h-2.0125l-.6708-2.6833h0l-1.3417-.6708h-2.0125v1.3417l-1.3417.6708-.6708,2.0125-.6708,1.3417h-.6708l-1.3417-.6708-.6708.6708-.6708.6708-2.0125.6708-2.6833.6708v1.3417h-2.0125v1.3417l.6708,1.3417-.6708,1.3417-.6708,1.3417v2.0125l1.3417.6708-1.3417,2.0125v3.3541l1.3417,1.3417,1.3417.6708-.6708,1.3417v.6708h.6708v1.3417h-1.3417l-.6708,2.0125-.6708,1.3417-.6708.6708-1.3417.6708v.6708l-.6708,1.3417-2.0125-.6708-2.6833-1.3417-.6708,1.3417-1.3417,1.3417h-1.3417l-1.3417.6708,1.3417,2.0125-.6708,2.0125-.6708.6708-.6708-.6708-.6708.6708-.6708.6708-1.3417.6708H554.89l-.6708,2.0125-.6708,2.6833.6708,6.0375,2.0123,1.3419,1.3419,1.3414v.6708l-.6708,1.3417.6708.6708v1.3417l-.6708,1.3417v2.6833l3.3541-.6708,2.6833-.6708,4.025,2.6833,2.0125,4.025h-.6708V213.43l.3381.6762.3328.6655-2.0125.6708v2.6833l2.0126.6708h2.6833l2.6833,1.3417,2.0125,2.0125v2.0125l2.0125-.6708h.6708l1.3417-1.3417,1.3417-1.3417h1.3417l2.0125-.6708h0l-.6708-.6708h-.6708V218.126h.6708v-2.6833l2.0125-.6708,2.0125-.6708h2.0125v.6708h1.3417V213.43l2.0125-1.3417,1.3417.6708,1.3417.6708,1.3417-.6708h.6708v.6708h-.6708l-1.3417,1.3417-1.3417.6708.6708,2.0125h.6708l1.3417-.6708,1.3417-2.0125.6708-.6708h1.3417l1.3417-.6708h0v-2.0125l.6708-1.3417h0l2.0125-.6708h1.3417l.6708-.6708v-1.3417h2.0125l-.6708-.6708h.6708l.6708-.6708h0l-.6708-1.3417-1.3417-.6708-1.3417.6708-.6708.6708v.6708l-.6708.6708h-.6708v-2.6833h-.6708l-.6708-.6708v-.6708l.6708-.6708H603.19v-4.025l1.3417-2.6833.6708-3.3541-.6708-.6708V188.61l.6708-1.3417h0l-.6708-1.3417-.6708-1.3417,1.3417-2.6833.6708-2.0125h1.3417l.6708-.6708,2.6833-4.025h2.0125l1.3417.6708.6708-2.0125V172.51l1.3417,1.3417.6708,1.3417v2.6833l.6708.6708.6708.6708v.6708l.6708.6708.6708-.6708.6708-.6708.6708,1.3417.6708,2.0125,1.3417-6.7083,1.3417-7.3791h-.6708l-.6708-1.3417-.6708-.6708V164.46h-.6708l-.6708-.6708v-2.6833l-2.6833-1.3417-1.3415-1.3416-.671-1.3417V156.41l-.6708-1.3417v-1.3417l-2.0125-2.0125-1.3417-2.0125v-2.6833l-1.3417-2.6833-.6707-.6708-2.0125,1.3417-1.3418,1.3416H603.19l-2.0123-.6708-2.0125,1.3417h-2.6835l-2.0123-.6708h-1.3418Z\"\r\n    },\r\n    {\r\n        title: \"Республика Марий Эл\",\r\n        id: \"RU-ME\",\r\n        path: \"M136.9633,205.38V204.71l-1.3417-.6708-.6708-.6708H134.28l-.6708.6708-.626-.6261-.7157-.7156H130.255l-.6708-1.3417-.6708-.6708-.6708-.6708-2.0125-1.3417-2.0125-.6709-.6708.6709-.6708.6708-.6708-.6708h-.6708l-.6708,1.3417.6708,1.3417h-.6708l-.6708,1.3417.6708.6708-.6708,1.3417h2.0125l.6708.6708,3.3541.6708.6708,2.0125v.6708l.6708.6708v1.3417l.6708,2.0125h1.3417l1.3417-.6708h2.0125v-.6708h2.6833l2.0125,1.3417,1.3417-.6708h0l.6708-.6708.6708-.6708-.6708-.6708v-2.6833h-.6708l-.6708-.6708.6708-1.3417V204.71h-1.3417l-.6708.6708h0Z\"\r\n    },\r\n    {\r\n        title: \"Республика Мордовия\",\r\n        id: \"RU-MO\",\r\n        path: \"M113.4843,208.7345l-2.0125.6708-1.3417.6708h-.6708v-.6708l-1.3417.6708-1.3417.6708-1.3417-2.6833-1.3417-4.6958-1.3417-.6708h-1.3417l-.6708-.6708-1.3417-1.3417v2.0125l-1.3417.6708-.6708.6708H96.0428l-1.3229.3,1.3229.37.6708,1.3417H95.3719l-.6708-.6708h0v.6708l-1.3417.6708.6708,2.0125,2.0125,1.3416.6708-.6708.6708-.6708,1.3417,2.6833,2.0125,4.025H102.08l1.3417-1.3417,2.0125,2.0125,2.6833,1.3417h2.6833l1.3417.6708,2.6833-4.025.6708-2.6833h-.6708v-.6708h-.6708l-.6708-.6708.6708-.6708-.6708-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Московская область\",\r\n        id: \"RU-MOS\",\r\n        path: \"M84.0013,166.4513l-.68.6587h-.6588l-1.4025.68-1.9209.6947-1.0966,2.6628-2.593,2.7038,1.1986.657.5869-.0246,1.275,2.6988,2.0378.6938.7034,3.3224-.68.68-.5313,1.3388,1.4238,2.0188h.9988l-.0265.68-.01,1.3513v.6708l.6951.6337h-.6588L81.62,189.9512l.067,1.3417h.9391l1.3417-.6708.6708-.6708.6849.6708H85.98l1.3785-.7108,3.9882.04V189.28l1.3416.6708H94.03l1.3823-4.0563-1.3388-1.3388-.68-.68-.68-1.3388-.6588-.6587,1.3388-4.0375,1.9782-3.3191V172.51l-.6708-1.3417H94.03l-2.6833-1.3417-1.3107,1.3211-.7018-.65L85.34,169.1288l-.6588-1.3388Zm4.08,8.9462.4888.9138a.779.779,0,0,0,.8075.2763l-.2125.6587.5313,1.6788L89.42,180.03l-1.7.1488-1.105-.7438-1.105.595-.5313-.8713-.425.9563-1.5725.085-.7225-.9137-.9775.7225-.3188-1.5937,1.1475-.3612.3613-1.4238,1.2113,1.3388.8925-.85,1.87.8287.255-1.36.8075-.425Z\"\r\n    },\r\n    {\r\n        title: \"Москва\",\r\n        id: \"RU-MOW\",\r\n        path: \"M88.5682,176.3l-.4848-.906-.571.7745-.8181.4191-.2483,1.3487-1.8745-.8183-.8806.8539-1.2232-1.3391-.3518,1.4206-1.1567.3492.3288,1.605.9643-.7234.7334.9125,1.5709-.0788.4292-.967.5279.8764,1.109-.59,1.0887.7351,1.7138-.1454.2642-1.1129-.52-1.6725.2108-.6569c-.51.0668-.57-.0925-.8116-.2851Z\"\r\n    },\r\n    {\r\n        title: \"Мурманская область\",\r\n        id: \"RU-MUR\",\r\n        path: \"M159.7715,66.5186v.3354L158.43,67.86l-2.0125-.805-1.3417-.47-.6708.5367-1.3417.7379-.6708-1.0733-.6708-.0671-1.3417-.2012V67.86l-2.6833,1.3417-2.0125,2.6833v1.3417l-.6708,3.3542-.6708,2.6833-2.0125.6708h-2.6833l-4.025,3.3541,2.6833,3.3541,2.6833,3.3542-.6708,2.0124.6708,2.0125,2.0125-.6708.6708.6708h.6708l.6708.6708V92.01l.6708-1.3417V87.9851l1.3417,2.6833v.6708h-.6708v3.3541h1.3417l.6708,3.3541h-.6708v.6708l.6708.6708h.6708v3.3541l1.3417,2.0125,2.0125,2.6833,2.0125,3.3541,1.3417,2.6833,6.7083,2.0125,4.025-.6708,3.3542-1.3417.6708-.6708v-1.3417l1.3417-1.3417,1.3417-2.0125h0l-.6708-1.3417h0l-.6708-.6708.6708-2.0125.6708-2.0125h-1.3417v-4.025h0l-.6708-.6708v.6708h0l-.6708-4.6958V85.9727h0l-.6708-1.3417h-.6708l.6708-.6708-.6708-.6708v-.6708h-1.3417l-.6708-2.0125-.6708-1.3417-1.3417-.6708-1.3417.6708-.6708-.6708h0l1.3417-.6708,1.3417-1.3417-1.3417-.6708h0l.6708-.6708-.6708-.6708-1.3417-.6708h.6708l.6708-.6708-.6708-.6708v-.6708l1.3417,1.3417,2.0125.6708-.6708-2.0125-.6708-2.6833v.6708h-2.0125v.6708l-.6708-.6708h0v-.6708l-.6708-1.3417v-.6708l-.6708.6708v.6708h-1.3417l-.6708-1.9454v-.0671Z\"\r\n    },\r\n    {\r\n        title: \"Ненецкий автономный округ\",\r\n        id: \"RU-NEN\",\r\n        path: \"M207.4,112.8058h-3.3541l-2.6833,2.6833.6708,2.6833,3.3541.6708h.6708l.6708-.6708H207.4l.6708-.6708v.6708h0l-.6708.6708h.6708l.6708-.6708v-2.6833Zm30.8582,15.4291,1.3417.6708v2.0125l2.0125,1.3417,1.3417-2.0125-.6708-2.0125-.6708-2.0125h0v-1.3417l-.6708-1.3417H239.6v1.3417h-1.3417v3.3541Zm-18.7832-.6708-2.0125-.6708-2.6833-.6708-3.3541.6708h0l.6708.6708v1.3417h-1.3417l-.6708-.6708v-.6708l.6708-.6708-2.0125-.6708h-2.6833l-.6708-.6708-4.025.6708-4.025-.6708-.6708-.6708v0h0v.6708h-.6708v2.0125h0l-.6708-1.3417-1.3417-.6708-.6708-.6708-2.6833,2.0125-2.6833,2.6833-3.3541-1.3417-2.6833-2.0125.6708-2.0125.6708-1.3417-.6708-1.3417-.6708-1.3417,2.6833-1.3417,2.0125-.6708,3.3541,2.0125.6708-.6708.6708-.6708v-.6708h.6708v-4.025l-2.0125-2.6833-2.6833-2.0125-.6708-2.0125-.6708-.6708v5.3666l-4.025,3.3541-3.3541,2.6833v4.025l-2.6833,2.0125-1.3417,1.3417v2.0125l2.6833,4.025,2.0125,4.025.6708,1.3417.6708.6708v.6708h1.3417v-.6708l1.3417-.6708h1.3417l1.3417.6708,1.3417,1.3417h4.6958l5.3666.6708,1.3417-.6708.6708-.6708.6708.6708h2.6833l3.3542,2.6833,4.025,3.3541,20.1249,12.0749.6708.6708.6708.6708,4.025-.6708,4.6958-1.3417v-.6708l.6708-1.3417.6708.6708h.6708l1.3417-.6708,1.3417-.6708,1.3417-.6708,1.3417-.6708.6708-.6708h1.3417l1.2972.5064,1.3861-1.848v-1.3417l-.6708-.6708-1.3417-2.0125.6708-.6708.6708-.6708,1.3417-1.3417v-1.3417l-2.0125-3.3541-2.6833-2.6833-3.3541-2.6833-.6708-.6708-.6708-.6708-.6708.6708-.6708.6708h0l-.6708-.6708h-.6708l-.6708.6708v4.025l-.6708,4.025h0l-.6708-.6708h-.6708l-1.3417.6708-1.3417-.6708h-.6708l-.6708,1.3417-2.0125.6708-.6708-1.3417.6708-1.3417,1.3417-.6708h.6708v-1.3417l-.6708-1.3417h.6708l-4.6958-.6708-4.025.6708-1.3417-2.0125-4.025-1.3417-2.6833.6708v.6708l-.6708.6708-.6708-1.3417H214.78l-.6708.6708h-.6708l.6708-.6708v-1.3417l-1.3417-.6708h-1.3417l.6708-.6708v-.6708h1.3417l1.3417.6708.6708-1.3417.6708-1.3417h.6708l.6708-.6708v-.6708h2.0124Z\"\r\n    },\r\n    {\r\n        title: \"Новгородская область\",\r\n        id: \"RU-NGR\",\r\n        path: \"M86.6511,135.614v-.6708H84.6386l-1.3417.6708-.6708-1.3417-.9392-.6708-1.2746.6708H79.3391l-3.3541,1.3417.47,2.6833.6708,2.0125-.6038.6708h-.805l-.0671.6708-.1342.6708-2.0125.6708-.3354,1.3417L71.96,145.6765l.1342,1.3417.8721,1.3417.9392.6708,3.7567,1.3417,3.69.6708,1.2746,1.3417h.6708l2.0125-.6708,2.0125-.6708.6708-.6708.6708-.6708,2.0125,1.3417,1.3417,2.0125h.6708l.6708.6708,1.3417.6708.6708-.6708h.6708l1.3417.6708.6708,1.3417h.6708l1.3417.6708v-4.025l-.6708-.6708H98.726v-.6708h-.6708v-1.3417l.6708-2.0125-1.3417-2.0125-.6708-1.3417v-2.0125l-1.3417-1.3417V140.31l-.6708-.6708H92.0177v-2.6833l-.6708-.6708-.6708-.6708h0v-.6708l-1.3417.6708-1.3417.6708-1.3417-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Нижегородская область\",\r\n        id: \"RU-NIZ\",\r\n        path: \"M126.23,187.2679l-1.3417,1.3417h-2.6833l-2.6833-1.3417v.6708h-.6708l-1.3417.6708-.6708,1.3417-1.3417.6708-1.3417-.6708-1.3417-.6708-1.3417,1.3417-.6708.6708-.6708-.6708h-.6708v1.3417l-.6708.6708v.6708h-3.3541l-2.0125.6708-2.0125,1.3417-2.6833.6708V197.33l-.6708.6708h.6708l1.3417.6708v1.3417l-.6708.6708,1.3417,1.3417.6708.6708h1.3417l1.3417.6708,1.3417,4.6958,1.3417,2.6833,1.3417-.6708,1.3417-.6708v.6708h.6708l1.3417-.6708,2.0125-.6708.6708.6708-.6708.6708.6708.6708h1.3417v-.6708l1.3417-.6708h2.0125l-.6708-1.3417v-2.0125h0l1.3417-.6708.6708-.6708.6708-1.3417-.6708-.6708.6708-1.3417h.6708l-.6708-1.3417.6708-1.3417h.6708l.6708.6708.6708-.6708.6708-.6708,2.0125.6708,2.0125,1.3417.6708-.6708.6708-.6708.6708-1.3417.6708-.6708,2.6833,1.3417,1.3417-.6708,1.3417-.6708h0l.6708-.6708-2.0125-2.6833-2.0125-2.6833-2.6833-.6708h-1.3417V188.61l-2.0125-2.0125Z\"\r\n    },\r\n    {\r\n        title: \"Новосибирская область\",\r\n        id: \"RU-NVS\",\r\n        path: \"M256.371,267.0967l-1.3417-.6708-1.3417-1.3417-.6708,1.3417v.6708l-.6708,1.3417V269.78l-1.3417.6708-.6708,1.3417.6708,1.3417v1.3417h-2.6833l-1.3417.6708-1.3417,1.3417h-1.3417V277.83l.6708.6708-1.3417,1.3417-.6708,3.3541.6708,1.3417.6708,2.0125v.6708l-.6708.6708-.6708,1.3417-.6708,2.0125h2.6833l.6708-.6708.6708-.6708.6708.6708h2.0125l-1.3417,1.3417-1.3417.6708,2.0125,4.025,2.6833,4.6958,1.3417-1.3416.6708-.6709.6708.6708v.6708l1.3417-.6708h1.3417l2.0125.6708h2.0125l.6708-.6708h0l4.6958-2.0125,4.025-1.3417v.6708l.6708,2.0125.6708.6708v1.3417H271.8l.6708.6708-.6708.6708h0l2.6833,4.025,2.0125-2.0125,3.3541-2.0125.6709,1.3417h.6708v-1.3417h5.3666l.6708-.6708,2.0125-1.3417.6708-1.3417.6708-.6708V297.284l-.6708-1.3417.6708-1.3417.6708-1.3417-.6708-.6708v-2.0125l-.6708-2.0125v-.6708l.6708-1.3417h-3.3541l-.6708-.6708-.6708,2.0125-1.3417.6708-.2662-.2664-.4046-.4044h0l-.6708-.6708.6708-.6708.6708-.6708v-2.6833l.6709-.6709-.6709-1.3416h-2.0125l-.6708.6708v.6708l-.6708-.6708h-4.025l-.6707-2.6834-4.6958-.6708-3.3541-5.3666-4.6691-2.62.6267-.6939Z\"\r\n    },\r\n    {\r\n        title: \"Омская область\",\r\n        id: \"RU-OMS\",\r\n        path: \"M253.0169,251.6676,247.65,253.68l-4.6958-1.3417h-1.3417l-.6708.6708-2.0125-1.3417-1.3417-.6708-1.3417-.6708h-1.3417v-1.3417l.6708-.6708-.6708-1.3417-.6708-.6708-2.0125,1.3417-2.0125,1.3417v4.025l-1.3417.6708-.6708.6708.6708.6708h2.0125v.6708l.6708,4.6958-2.0125.6709-1.3417-.6708v2.0125h-.6708l-.6708.6708v1.3417h-.6708l-.6708.6708v.6708l-1.3417.6708-.6708.6708.6708.6708-.6708.6708H222.83v.6708l.6708.6708-1.3417.6708h-.6708v1.3417l1.3417,2.0125-.6708,3.3541v1.3417h.6708l-2.0125,2.6833.6708,1.3417.6708.6708.6708.6708H223.5l.6708-.6708h.6708v.6708h.6708v-.6708l.6708-.6708v4.6958l1.3417-.6708V285.88l1.3417.6708,1.3417,1.3417.6708.6708h1.3417v.6708l-.6708.6708-1.3417-.6708-1.3417,2.0125.6708,1.3417,1.3417-.6708,3.3541,2.0125h.6708l2.6833-1.3417H239.6l1.3417-1.3417h1.3417l.6708-2.0125.6708-1.3417.6708-.6708v-.6708l-.6708-2.0125-.6708-1.3417.6708-3.3541,1.3417-1.3417-.6708-.6708v-1.3417h1.3417l1.3417-1.3417,1.3417-.6708h2.6833v-1.3417l-.6708-1.3417.6708-1.3417,1.3417-.6708v-1.3417l.6708-1.3417v-.6708l.6707-1.3416-.6708-.6708-.6708-1.3417.6708-.6708v-1.3417l-.6708-1.3417v-2.6833l-.6708-.6708v-.6708h.6708V253.68h.6708v-2.0125Z\"\r\n    },\r\n    {\r\n        title: \"Оренбургская область\",\r\n        id: \"RU-ORE\",\r\n        path: \"M141.6591,252.3384l.6708-2.0125h-.6708l-.6708-.6708v-.6708h0l-.6708-.6708-.6708-.6708v-4.025l.3748-1.1244.296-.8881-1.3417-1.3417v-1.3417l.6708-.6708h0V237.58h-.6708l-1.3417-2.0125-2.0125.6708-1.3416,2.6834-1.3417.6708-1.3417.6708-1.3417,2.0125-1.3417,1.3417h-1.3417l-.6708.6708-2.6833,1.3417-2.0125,2.0125-5.3666.6708v.6708l1.3417,2.0125v1.3417h0l2.0125,1.3417h3.3541v3.3541l2.0125.6708,1.3417,1.3417.6708,1.3417V261.73l.6708,2.6833.6708,2.6833-.6708.6708v1.3417l1.3417-.6708.6708-1.3417.6708.6708h.6708V269.78l1.3417,1.3417.6708,1.3417h2.0125l.6708-.6708.6708-.6708,2.6833.6708,2.6833,1.3417.6708,1.3417v.6708h1.3417l1.3417-.6708.6708.6708.6708.6708h1.3417l.6708,2.0125-.6708,1.3417,3.3541,4.6958h2.0125l1.3417-1.3417.6708,1.3417v.6708l4.6958,2.0125,4.025-3.3541-2.0125-3.3541-2.0125-2.6833h.6708v-.6708l-.6708-1.3417v-1.3417h-.6708l1.3417-2.0125,1.3417-.6708-2.0125-2.0125-2.0125-.6708-.6708.6708h-.6708v-1.3417l-.6708-.6708-.6708,1.3417h-1.3417l-1.3417,2.6833-2.6833-.6708-.6708-.6708-1.3417-.6708h-2.6833l-.6708-.6708-.6708-1.3417h-.6708l1.3417-3.3541-.6708-.6708-.6708-.6708,1.3417-1.3417,1.3417-2.0125-2.0125-.6709-1.3417,1.3417H142.33l-1.3417-4.025H142.33v-.6709l-.6708-1.3416v-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Орловская область\",\r\n        id: \"RU-ORL\",\r\n        path: \"M68.002,185.9263l-2.6833-.6708-2.6833-.6708-.2683.6708h-.47l-1.4758.6708H59.3483l-.2683.6708-.2012,1.3417-1.61.6708-.7379,1.3417.8721.6708,1.14.6708v2.0125l1.7442.6708,1.2746.6708.0671,1.3417.1342,2.0125.6708.6708.6708.6708-.2012.6708v1.3417H63.91l.2012.6708h.47l2.2137-.6708.805.6708.2012-1.3417-.0671-.6708.3354-.6708.4025-1.3417,2.8175-1.3417-.0671-2.0125.1342-1.3417-.6708-.6708-.7379-.6708L68.4716,189.28l-.47-3.3541Z\"\r\n    },\r\n    {\r\n        title: \"Пермский край\",\r\n        id: \"RU-PER\",\r\n        path: \"M179.2256,193.3054l-1.3417-1.3417-1.3416-2.0126-1.3417.6709-1.2144-.81-.7981-.5319.6708-1.3417-1.3417-1.3417h-1.3417l-4.025-1.3417L165.809,188.61l.6708,2.0125-1.3417.6708,2.6833,2.6832,2.6833,2.0126-2.0125,2.6832-3.3541,2.0126v2.0125l1.3417,1.3417-.6708.6708-.6708,2.0125-1.3417.6708-.6708,1.3417-2.0125,6.0375-2.6833,6.0375-.6708.6708-.6708-.6708v.6708l-.6708.6708h-.6708l-.6708.6708v3.3541l.6708-.6708h.6708l.6708,2.0125.6708,1.3417,2.0125.6708h2.0125v.6708l.6708.6708.6708.6708h.6708l.6708,2.0125v.6708h2.6833l1.3417-1.3417.6708-2.0125h0v-.6708l1.3417-.6708h3.3541l1.3417-2.0125,1.3417-1.3417,1.3417,1.3417h2.0125V226.176l.6708-2.0125,3.3541-.6708,2.0125-2.0125h0v-2.6833l1.3417-2.0125-1.3417-3.3542,2.0125-2.0125,1.3417-.6708,1.3417-.6708,3.3541-3.3541,3.3541-3.3541v-1.3417l1.3417-2.6833,2.0125-2.6833-6.7084-.6708-4.0249-4.025-2.0126.6709-1.3417.6708h0l-.6707-.6709h-.6709l-.6708.6708h-1.3417v-.6708h-2.6833l-1.3417.6708Z\"\r\n    },\r\n    {\r\n        title: \"Пензенская область\",\r\n        id: \"RU-PNZ\",\r\n        path: \"M103.4218,214.1011l-1.3417,1.3417h-1.3417l-2.0125-4.025-1.3417-2.6833-.6708.6708-.6708.6708L94.03,208.7345l-.6708-2.0125H92.0177l-.6708.6708-.6708,1.3417-.6708.6708.6708.6708h0v1.3417l-1.3417.6708.6708,2.0125v3.3541l-.6708.6708-1.3417.6708,1.3416,2.0125,2.0125.6708.6708,1.3417.6708.6708H94.03l.6708.6708.6708.6708v.6708l2.0125,1.3417,1.3416.6709h.6708v1.3417l2.0125-.6708h1.3417l1.3417.6708.6708.6708,2.0125-1.3417,2.0125-2.6833v-1.3417l-.6708-1.3417.6708-2.6833-.6708-2.6833-2.6833-1.3417-2.0125-2.0125Z\"\r\n    },\r\n    {\r\n        title: \"Приморский край\",\r\n        id: \"RU-PRI\",\r\n        path: \"M583.0651,336.1921h-2.0125l-1.3417-.6708V334.18l.6708-1.3417-.6708-1.3417-1.3417-1.3417-.6708-.6708h0l-2.6834,1.3414-1.3416,2.0128h-1.3417v.6708l.6708.6708.6708.6708v.6708l.6708.6708h2.6833l-1.3417,4.025-2.6833,1.3417v2.6833l-2.6833,2.0125-3.3541,1.3417-.6708-.6708-.6708-.6708-.6708.6708-.6708.6708v-1.3417l-.6708-.6708-.6708.6708-.6708-.6708h-.6708l-1.3417,2.0125-.6708,2.0125V350.95l-1.3417,1.3417v7.3791l-.6708,1.3417.6708,1.3417-.6708.6708-.6708,1.3417.6708,2.0125-1.3417,1.3417h-5.3666l-2.0125.6708-.6708,2.6833-1.3417.6708-.6708.6708.6708,1.3417.6708,1.3417,2.0125,4.025.6708,4.025.6708.6708v.6708l-.6708,4.6958-2.0125.6708-.6708,1.3417h.6708l.6708.6708.6708,1.3417.6708,1.3417.6708-1.3417v-.6708l-.6708-.6708-.6708-.6708h3.3541v-1.3417l.6708-2.6833,1.3417-2.0125-.6708-.6708.6708-.6708h.6708v2.0125l.6708-.6708.6708-.6708.6708-.6708V383.15l.6708,2.0125v1.3417h.6708v-.6708h.6708l.6708.6708.6708-.6708h0l1.3417.6708.6708.6708h0v-1.3417l.6708.6708h0l1.3417-.6708,1.3417-1.3417,4.025-4.025,2.6833-4.6958.6708-.6708v-1.3417h.6708v-2.6833l.6708-2.0125v-1.3417l1.3417-1.3417.6708-3.3541L578.3693,359l1.3417-4.025,1.3417-3.3541.6708-3.3541.6708-4.025v-3.3542l.6708-2.6833Z\"\r\n    },\r\n    {\r\n        title: \"Псковская область\",\r\n        id: \"RU-PSK\",\r\n        path: \"M77.5278,126.8933l-.5367-1.3417-.6708-2.0125-1.4758,2.0125-1.5429,1.3417h-2.08l-1.0733,1.3417.47.6708.3354.6708-1.0063,2.0125-.9392-.6708.2683-.6708.2012-.6708h-.4025l-.1342.6708H68.27l-.5367-.6708-1.2075.6708H65.2516v.6708H65.52l-.0671.6708-.6708,2.0125-1.5429,1.3417-1.6771.6708.1342.6708.0671.6708-1.6771,2.0125-2.2137,2.6833h-.0671l.0671.6708.5367.6708.6708.6708-.2683.6708-.0671.6708h.6037l.8721,1.3417-.805,2.0125-.5367.6708H59.885l.5367.6708h1.14l1.2075,3.3541v1.3417l.3354.6708h1.4087l.9392,1.3417,3.4212-2.6833.4025-2.0125v-1.3417l.6037-.6708.6037-.6708-.3354-.6708h-.0671l.9392-.6708,1.0733-.6708-.1342-1.3417,1.2075-1.3417.3354-1.3417,2.0125-.6708.1342-.6708.0671-.6708h.805l.6038-.6708-.6708-2.0125-.47-2.6833,3.3541-1.3417L78.3328,132.26l.47-2.6833-.6037-1.3417-.6708-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Ростовская область\",\r\n        id: \"RU-ROS\",\r\n        path: \"M68.1362,227.5177H67.6l-.47.6708-2.8846.6708-2.75-.6708-1.5429-1.3417-2.1467,2.0125-2.8175-.6708-.47.6708v1.3417h.5367l.4025.6708H52.573l-.2012.6708.2012.6708-.5367,1.3417-.47.6708-1.2075,1.3417-1.7442.6708-2.1467-1.3417-2.08-2.0125H41.7726l-1.2075-.6708-1.6771,1.3417-1.8112,1.3417,1.14.6708.6037.6708,1.9454.6708,1.4758.6708-.1342.6708h-.4025l-.5367,1.3417-.4025-.6708h-.6708l-1.2075-.6708H37.8147l-.1342.6708.2683.6708-.8721.6708-.3354.6708,2.08.6708,3.0187,1.3417.805.6708.2683,1.3417-.6037.6708h-.47l.1342.6708.2683.6708-.2683.6708-.3354.6708,1.5429,2.6833h1.14l-.3354.6708h-.4025l.0671,1.3417-.3354.6708,1.3417.6708,1.14,1.3417,2.415-.6708,1.8112-.6708,2.8846,2.0125,2.08,4.6958,1.2075.6708,1.0062-.6708.3354.6708h.2683l.7379-.6708.5367-1.3417h3.4212l.1342-.6708.1342-.6708,1.8783-1.3417.9392-2.0125H63.5746l-1.14-.6708.4025-.6708-.4025-.6708-.47-.6708H60.8912l.3354-.6708v-.6708h-1.14l.6708-4.025-1.0062-2.0125-.6708-1.3417.3354-.6708h.6708l.805-.6708.8721-.6708,2.2137.6708,2.415-1.3417-.1342-2.0125-.3354-1.3417-.4025-.6708h-.2683l1.8783-2.0125,1.8112-1.3417L68.27,230.201l-.1342-2.6833Z\"\r\n    },\r\n    {\r\n        title: \"Рязанская область\",\r\n        id: \"RU-RYA\",\r\n        path: \"M92.6886,189.9513l-1.3417-.6708v.6708l-3.9882-.04-1.3785.7108h-.6567l-.6849-.6708-.6708.6708-1.3417.6708H81.687L78.4,196.66l.47,1.3417v1.3417h1.4758l1.5429.6708-.2013,1.3417.2683,1.3417,1.3417.6708h2.0125l.6708,1.3417.6708.6708h1.3417l.6708-.6708,3.3541,2.0125h1.3417l.5378-.2688.8039-.402h0V205.38l.6708.6708h1.3417l-.6708-1.3417-1.3229-.37,1.3229-.3h1.3417l.6708-.6708,1.3417-.6708v-2.0125l.6708-.6709V198.672l-1.3417-.6708h-.6708l.6708-.6708v-1.3417l-2.6833-3.3541L94.03,189.9513H92.6886Z\"\r\n    },\r\n    {\r\n        title: \"Республика Саха (Якутия)\",\r\n        id: \"RU-SA\",\r\n        path: \"M412.0035,120.185h-1.3417v2.0125h-.6708l.6708,1.3417,2.0125,1.3417,1.3417-.6708.6708-1.3417Zm69.7663-8.7208-1.3417-2.0125-2.0125-.6708,1.3417,1.3417,2.0125,1.3417Zm-6.7083-15.4291V93.3518l-.6708-.6708-1.3417.6708,1.3417,2.0125v1.3417Zm16.7707,6.7083.6708,2.6833.6708.6708h1.3417v-2.6833Zm11.4041,8.05,1.3417-2.6833v-.6708l-.6708-.6708-3.3541-2.0125h-3.3541l-1.3417,2.0125v2.6833l-.6708,1.3417-.6708.6708-.6708.6708h1.3417l1.3417-.6708,1.3417-.6708h2.0125l3.3541-.6708Zm-4.6958-25.4915.6708-.6708-3.3541-.6708-2.6833-.6708-.6708.6708-1.3417.6708-2.6833-1.3417-2.0125-.6708v.6708l.6708.6708h-.6708l-.6708.6708v.6708l.6708,1.3417v.6708l.6708.6708h0l-2.0125-.6708-2.0125-.6708-1.3417-.6708h-.6708l-.6708-.6708V84.631l-.6708.6708-.6708,1.3417-.6708,1.3417-.6708.6708-.6708.6708.6708.6708V92.01l-.6708,1.3417h.6708l.6708.6708v1.3417l.6708,1.3417,1.3417,1.3417,2.0125.6708.6708,1.3417.6708.6708h3.3541v-4.025l.6708.6708.6708.6708.6708-.6708.6708-.6708,2.6833-2.0125h2.6833l.6708-.6708.6708-.6708.6708-.6708-1.3417-.6708h-1.3417l-2.6833-2.0125-1.3417-2.6833,2.0125-2.0125h0v.6708l4.025,5.3666,2.0125-2.6833-.6708-2.6833Zm16.1-4.025h0l-.6708.6708-2.0125-.6708-2.0125.6708v.6708l-.6708.6708-1.3417-.6708v-.6708H505.92l-1.3417.6708V83.96l-.6708.6708-1.3417-1.3417v-.6708l-.6708,1.3417.6708,2.6833,2.6833.6708,3.3541.6708,4.025-1.3417,2.6833-2.6833V82.6185Zm44.2747,24.15-10.7333,6.7083-3.3541,4.025-2.6833,1.3417-2.6833-1.3417-2.6833-1.3417h-3.3541l-2.6833-.6708v.6708l-.6708.6708h-1.3417l-.6708-.6708.6708-1.3417,1.3417-.6708-1.3417-1.3417-2.0125-1.3417-2.6833.6708-2.0125.6708-2.6833,5.3666-2.6833,4.6958h-.6708V120.185h0l-.6708-.6708,1.3417-.6708.6708-.6708-.6708-.6708V116.16l1.3417-.6708.6708-1.3417-1.3417.6708-3.3541,2.0125-.6708.6708-.6708.6708-.6708-1.3417,2.0125-2.0125h.6708l2.0125-1.3417,2.0125-.6708h0l-7.3791.6708-7.3791,2.6833h-3.3541l-1.3417.6708.6708.6708,1.3417.6708-.6708,2.0125-2.0125.6708L497.199,124.21l.6708.6708,1.3417-.6708v1.3417l.6708.6708.6708,1.3417v1.3417l1.3417.6708v1.3417h-1.3417V132.26l-.6708-.6708-.6708-.6708h-.6708l-.6708.6708h-1.3417v4.025l-2.6833-1.3417-4.6958-.6708-2.0125,2.6833-2.6833,2.0125-2.6833-.6708-2.0125-1.3417-.6708-1.3417,1.3417-.6708h0l-1.3417-.6708-.6708,6.0375-.6708,7.3791-.6708.6708-.6708-.6708-.6708-.6708h0v.6708h-1.3417l-.6708-.6708v-.6708h-2.0125l-1.3417-2.0125-1.3417-2.0125h-.6708l-.6708-.6708.6708-.6708.6708-.6708-.6708-1.3417-1.3417-.6708h0l.6708.6708v.6708l-.6708.6708-1.3417-1.3417-.6708-1.3417-3.3541-2.0125-1.3417-.6708h2.0125l1.3417,1.3417,1.3417,1.3417h2.0125l1.3417-1.3417-.6708-2.0125-1.3417-1.3417v-2.6833l-.6708-1.3417v-.6708l-1.3417-1.3417h-1.3417l-4.025-3.3541-1.3417.6708-1.3417.6708h-3.3541l-2.0125-1.3417-2.6833-.6708v.6708l-.6708.6708-1.3417,3.3542.6708,2.6833V132.26l-1.3417-.6708h-2.0125v.6708h-1.3417l-1.3417.6708-.6708.6708-2.0125-.6708-1.3417-.6708H432.8l-1.3417-.6708v-1.3417l1.3417-1.3417-.6708-.6708h-5.3666l-1.3417-.6708-.6708.6708h-.6708l-1.3417-.6708h-1.3417l-.6708.6708-.6708.6708-1.3417.6708-2.0125.6708V132.26l-1.3417-1.3417.6708-1.3417-.6708-2.0125-1.3417-1.3417v2.0125l-.6708.6708H411.333l-2.0125-1.3417-.6708.6708-.6708,2.0125-1.3417,1.3417.6708.6708h.6708v2.0125l.6708.6708-.6708,2.6833.6708,2.6833.6708.6708v2.0125l.6708.6708,1.3417.6708,1.3417,1.3417.6708,2.6833v2.6833l1.3417,2.6833.6708,2.0125v.6708l-2.6833,2.0125-2.6833,2.0125-.6708,2.0125v1.3417l-.6708.6708-1.3417.6708v2.6833l-1.3417,2.0125h-1.3417l-2.0125-.6708-2.0125.6708-1.3417,1.3417h-1.3417l-1.3417-.6708v.6708h-.6708l-.6708,1.3417v.6708l.6708,2.6833,1.3417,2.0125v9.3916l-.6708,7.3791-2.0125,1.3417-1.3417,1.3417.6708.6708.6708.6708v4.6958l.6708,1.3417v3.3541l.6708,1.3417,1.3417,1.3417,1.3417,1.3417-.6708,1.3417-.6708.6708-1.3417,2.0125v2.0125l-1.3417,2.0125,1.3417,2.6833h1.3417l.6708.6708.6708.6708,2.6833.6708h4.6958l.6708,1.3417.6708,2.0125-.6708.6708-1.3417,2.0125,2.0122.6707,2.0125,2.0125.6528,4.5693.0181,3.4806,1.3417,1.3417,1.3419,2.0126-.6711,1.3415-1.3414,1.3418.6708,3.3541,2.0125,2.0125-1.3417,3.3541-1.3417,4.025v2.0125l-.6711.6706-.6708.6708,0,3.3543.6708,2.6833h1.3417l3.3541-.6708.6708-1.3417,2.0125.6708h.6708v-.6708h.6708l.6705,0,.6711,0h2.0125l.6708-.6708,1.3417-1.3417v.6708l.6705,1.3415,1.3419.671-.6708,2.0125,3.3541-3.3542,2.6833-4.025H432.8l.6708-1.3417.6708-2.0125,1.3417-.6708h1.3417l2.0125-2.0125H441.52l2.0125.6708,1.3417,1.3417,1.3417.6708v1.3417l.6708.6708v1.3417h3.3541l3.3538,0,.6711,1.3418v1.3417l.6708,1.3417v2.0125l.6708,1.3417.6708.6708v.6708l.6708,1.3417v4.025l1.3417,2.6833h0l.6708-.6708h.6708l.6708,2.6833,2.0125,2.6833,2.6833-1.3417,2.6833-.6708,1.3417.6708,1.3417.6708,1.3417.6708h2.6833l1.3417.6708.6708.6708h4.025l3.3541.6708,1.3417,1.3417,1.3417,1.3417,3.3541.6708,2.0125-.6708h2.0125l1.3417.6708h1.3417l2.0125-1.3417,1.3417-.6708h.6708l1.3417.6708v-.6708l.6708-1.3417h2.6833V285.88l2.0125.6708,2.0125.6708.6708-.6708V285.88l1.3417-1.3417,1.3417-.6708v-.6708l.6708-.6708h2.0125l1.3417-1.3417.6708-3.3541v-2.6833l1.3417-.6708.6708-.6708v-1.3417l-.6708-1.3417-1.3417-.6708-.6708-.6708h-1.3417l.6708-1.3417,1.3417-.6708V265.755l.6708-.6708.6708-.6708-2.0125-1.3417-1.3417-2.0125h2.0125l-.6708-2.6833.6708-2.0125.6708-4.025.6708-1.3417,1.3417-1.3417h1.3417l3.3541-1.3417,3.3541-1.3417.6708-.6708v-1.3417l.6708-1.3417.7623.381.5793.29h.6708l1.3417-.6708h0l3.3541-2.0125.6708-2.6833v-.6708l.6708-.6708,1.3417,1.3417.6708-.6708-.6708-2.0125-1.3415-1.3418-.671-2.6832-.6708-3.3541-1.3417-2.0125.6708-2.6833v-.6708l.6708-.6708v-.6708l.6708-.6708v-1.3417l1.3417-.6708.6708-.6708v-4.025l.6708-4.025h2.6833l3.3541,1.3417H546.84l.6708-.6708.6708.6708.6708.6708,1.3417-2.0125,1.3417-1.3417h.671l.6707.671.6708-.6708.6708-.6708.6708.6708,1.3417,1.3417.6708-2.0125v-4.6958l.6708-1.3417v-1.3417l-.6708-.6708.6708-1.3417v-.6708l-1.3417-1.3417-2.0125-1.3417-.6708-6.0375.6708-2.6833.6708-2.0125h1.3417l1.3417-.6708.6708-.6708.6708-.6708.6708.6708.6708-.6708.6708-2.0125-1.3417-2.0125,1.3417-.6708h1.3417l1.3417-1.3417.6708-1.3417,2.6833,1.3417,2.0125.6708.6708-1.3417v-.6708l1.3417-.6708.6708-.6708.6708-1.3417,1.3417-2.0125h.6708v-1.3417h-.6708v-.6708l.6708-1.3417-.6708-.6708-2.0125-1.3417v-3.3541l1.3417-2.0125-1.3417-.6708v-2.0125l.6708-1.3417.6708-1.3417-.6708-1.3417V152.385h2.0125v-1.3417l2.6833-.6708,2.0125-.6708.6708-.6708.6708-.6708,1.3417.6708h.6708l.6708-1.3417.6708-2.0125,1.3417-.6708v-1.3417h0l-1.3417-2.0125-1.3417-2.6833.6708-.6708v-.6708l-4.025-1.3417-4.025-2.6833V132.26l.6708-1.3417-.6708-.6708-.6708-.6708,3.3541-4.6958,4.6958-5.3666.6708-.6708,1.3417-.6708-.6708-1.3417-1.3417-2.0125v-1.3417l-1.3417-.6708h-.6708l-.6708-1.3417h0l-.6708-.6708h-.6708l-.6708-.6708-.6708-1.3417h0l-.6708,1.3417v1.3417h-.6708v-.6708h-.6708v3.3541l-.6708-1.3417-1.3417-1.3417-2.0125.6708h-2.6833l-.6708-2.0125-1.3417-2.6833-7.3791-2.0125Zm-65.7413,28.1748,1.3417.6708,1.3417-.6708v-.6708l-.6708-.6708-1.3417.6708Z\"\r\n    },\r\n    {\r\n        title: \"Сахалинская область\",\r\n        id: \"RU-SAK\",\r\n        path: \"M634.719,340.8879h0l-1.3417.6708h-1.3417V342.9l-.6708,2.6833-.6708,2.6833.6708.6708h.6708v-2.6833l.6708-2.6833,1.3417-1.3417.6708-.6708Zm4.025,4.6958v-1.3417l-.6708.6708-.6708.6708Zm4.6958-18.1124-.6708-1.3417h-.6708l-.6708,2.0125-.6708,1.3417h-2.6833v.6708l.6708.6708-.6708,1.3417-.6708,1.3417V334.85l-.6708,1.3417v1.3417l-.6708,1.3417.6708.6708.6708-3.3541.6708-.6708.6708-.6708v-1.3417l1.3417-1.3417.6708-2.0125,1.3417-1.3417,1.3417-1.3417Zm4.6958-11.4041h0l-.6708.6708-1.3417,3.3541v.6708l-.6708.6708,1.3417.6708,1.3417-4.6958Zm5.3666-10.0625-.6708-2.0125v2.0125l-.6708,1.3417v.6708h0Zm.6708-9.3916v1.3417l.6708-.6708v-.6708Zm.6708-10.0624h0l-.6708-1.3417.6708.6708Zm-.6708-8.05.6708,1.3417v.6708l.6708-.6708-.6708-2.0125-.6708.6708Zm2.6833-12.7458v-1.3417h-.6708l-.6708,1.3417Zm-2.0125,4.025-1.3417,2.6833.6708.6708,1.3417-1.3417.6708-2.0125v-2.0125l-.6708-1.3417-.6708-.6708-.6708.6708.6708,1.3417Zm-55.6789,33.5415-3.3541-4.025-2.6833-3.3541-2.0125-2.6833v.6708h-.6708v-1.3417l-1.3417-.6708-1.3417-1.3417-.6708-3.3541-1.3417-4.025h0v0h-.6708l-1.3417-1.3417-.6708-1.3417h.6708l.6708.6708v.6708h.6708l-2.6833-3.3541-2.0125-2.6833v-1.3417l-2.0125-1.3417-.6708-.6708v1.3417h-.6708l-.6708.6708,1.3417.6708,2.0125,1.3417v.6708h.6708v1.3417h-.6708v.6708h0l.6708.6708-.6708,2.0125-.6708-.6708h-.6708l-1.3417.6708v1.3417l.6708,1.3417.6708.6708,1.3417,4.6958,1.3417,4.6958,2.6833,2.0125,3.3541,2.6833.6708,2.0125v2.6833l1.3417,1.3417.6708,1.3417,4.025,12.0749v.6708l2.6833,2.0125,1.3417,2.6833.6708,2.0125v2.6833l1.3417,1.3417.6708,1.3417,1.3417,5.3666,2.6833,4.025.6708-.6708v-1.3417l-.6708-3.3541.6708-2.6833.6708.6708h0l2.0125-.6708,1.3417.6708,1.3417.6708.6708,1.3417.6708.6708-1.3417-3.3541-1.3417-2.6833-.6708.6708-1.3417-.6708-1.3417-.6708-1.3417-1.3417-2.6833-2.0125-2.0125-3.3541-.6708-4.025v-3.3541l-.6708-1.3417v-1.3417l.6708-.6708.6708-1.3417,3.3541-.6708,3.3541,1.3417,1.3417.6708.6708.6708-1.3417-1.3417-2.0125-1.3417-1.3417-1.3417-.6708-1.3417-4.025-4.025Z\"\r\n    },\r\n    {\r\n        title: \"Самарская область\",\r\n        id: \"RU-SAM\",\r\n        path: \"M129.5842,229.53l-1.3417-2.0125-.6708,1.3416-1.3417,2.0125h-1.3417l-.6708.6708h0l-2.0125-1.3417-1.3417-1.3417h-1.3417l-1.3417-.6708h-.6708l-1.3417.6708h-2.0125l-1.3417,3.3541-1.3417,2.0125v.6708l.6708,1.3417V237.58l.6708.6708,1.3417.6708v2.0125h.6708v2.0125h0l.6708.6708.6708,2.6833.6708,2.0125,5.3666-.6708,2.0125-2.0125,2.6833-1.3417.6708-.6708h1.3417l1.3417-1.3417,1.3417-2.0125,1.3417-.6708,1.3417-.6708,1.3417-2.6833,2.0125-.6708-1.3417-1.3417h-.6708v-2.0125l-.6708-.6708-1.3417-1.3417h-1.3417l-1.3417.6708-.6708-.6709Z\"\r\n    },\r\n    {\r\n        title: \"Саратовская область\",\r\n        id: \"RU-SAR\",\r\n        path: \"M99.1042,227.5177H98.726l-1.3417-.6708-2.0125-1.3417v-.6708l-.6708-.6708-.6708-.6708H92.6886l-.6708-.6708-.6708-1.3417-2.0125-.6708-1.3417-2.0125-3.2678,1.3071L81.4186,221.48l.1342,2.0125-.9392,2.6833.4025,2.6833,1.61,1.3417h2.0125v.6708l.6708.6708h1.3417v1.3417h.6708l.6708.6708.6708,2.0125L87.3219,237.58l-1.3417.6708h0l.6708.6708h.6708v.6708l.6708.6708h0l.6708-.6708h.6708l.6708.6708v1.3417l1.3417.6708h1.3417l.6708,2.0125,1.3417,2.6833v.6708l2.0125,3.3541v4.025l3.3541-1.3417.6708-2.0125.6708-2.0125h.6708v.6708l.6708.6708h3.3541l.6708-.6708.6708-1.3417,5.3666,1.3417,1.3417-.6708,1.3417-.6708.6708.6708h.6708v-1.3417l-.6708-2.0125-.6708-2.6833-.6708-.6708h0v-2.0125h-.6708v-2.0125l-1.3417-.6708-.6708-.6708v-1.3417l-.6708-1.3416v-1.3417l-.6708-.6708-4.025-.6708-2.0125-2.6833-.6708-.6708-1.3417-.6708h-1.3417l-2.0125.6708v-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Республика Северная Осетия — Алания\",\r\n        id: \"RU-SE\",\r\n        path: \"M44.7913,281.8549l-1.0062.6708H42.98l-.5367-.6708h-.6708l-.7379.6708-.4025-.6708-.5367-.6708-1.4758.6708-1.5429.6708-.6037-.6708h-.6037l1.0062,3.3541.0671,1.3417,1.9454.6708,2.3479.6708h2.6162l.5367-2.0125-.6708-.6708.7379-1.3417,1.0733-1.3417h.3354l.2012.6708h1.4758l-.2683-2.0125-1.6771-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Севастополь\",\r\n        id: \"RU-SEV\",\r\n        path: \"M3.4993,233.0826l-1.7006-1.1782L1.19,229.4813l2.0308-.9254Z\"\r\n    },\r\n    {\r\n        title: \"Смоленская область\",\r\n        id: \"RU-SMO\",\r\n        path: \"M76.9912,164.46l-2.5492-.6708-3.5554-.6708L68.27,159.7639,65.4529,156.41l-.9392-1.3417H63.105l-.8721.6708-1.4758,1.3417-2.0125,2.0125H57.47l-.0671,1.3417.1342.6708h.2012l.0671.6708h-.6037l-.6708.6708-.6037,1.3417-.2683,2.0125.2683,1.3417-.0671.6708-.6708.6708-.805.6708.4025.6708.7379.6708.2012,2.0125-.6708.6708.1342,1.3417-.2683.6708h1.4758l.6708-.6708h2.3479l2.3479-.6708,1.14-.6708h1.0733l.47-.6708.6037-.6708,1.4087.6708,1.0062,2.0125h1.14l.6038-.6708.6037.6708.6708.6708,5.1654-1.3417,2.593-2.7038,1.0966-2.6628-.8721-.6708-1.0062-1.3417-.2683-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Санкт-Петербург\",\r\n        id: \"RU-SPE\",\r\n        path: \"M92.6886,123.5391l-2.0125-.6708-2.6833.6708-.6708,2.6833.6708,2.0125,2.6833,1.3417,2.0125-1.3417,1.3417-2.0125Z\"\r\n    },\r\n    {\r\n        title: \"Ставропольский край\",\r\n        id: \"RU-STA\",\r\n        path: \"M48.4809,258.3759l.4025-.6708-.2012-.6708H47.81l-.805.6708-.1342-.6708.0671-.6708h-.6708l-.47-.6708-1.14-1.3417-1.3417-.6708-.3354,1.3417-.3354.6708-1.2075-.6708-1.0062-.6708-.8721,1.3417-.5367,2.0125.6037,2.0125-.4025,1.3417.5367.6708-1.0062,1.3417-1.0733.6708-.2683-.6708h-.3354l.0671,2.6833,1.0733,1.3417.8721,2.0125h.9392l.8721.6708-.2683.6708H39.0893l-1.14.6708.2683.6708h.7379l-.5367.6708-.805,1.3417h1.5429l1.7442.6708.3354.6708-.1342.6708,1.8783,1.3417h1.4758l1.2746,1.3417.7379.6708h.3354l-.5367.6708h-.6708l1.6771,1.3417.2683,2.0125,1.4758-.6708,1.0062-.6708.2683.6708.5367.6708h1.2075l.3354-2.0125-1.0062-.6708h2.2808l.1342-1.3417H53.378l1.0062-.6708.9392.6708,1.8783-1.3417,1.2075-.6708-.5367-3.3541L56.33,270.4508l-.9392-1.3417-.4025-1.3417.47-3.3541-.805-1.3417L53.6463,261.73l-.5367-1.3417-.6038-2.0126Z\"\r\n    },\r\n    {\r\n        title: \"Свердловская область\",\r\n        id: \"RU-SVE\",\r\n        path: \"M206.73,201.3554l-2.0125-1.3417-2.0125-1.3417V196.66l-.6708-.6708v-.6708l-1.3417.6708v.6708l-2.0125,2.6833-1.3417,2.6833v1.3417l-3.3541,3.3541-3.3541,3.3541-1.3417.6708-1.3417.6708L185.934,213.43l1.3417,3.3542-1.3417,2.0125V221.48h0l-2.0125,2.0125-3.3541.6708-.6708,2.0125v1.3417H177.884l-1.3417-1.3417-1.3417,1.3417L173.859,229.53h-3.3541l-1.3417.6708h0v.6708l-.6708,2.0125-1.3417,1.3417v2.0125h.6708l.6708.6708,2.6833,1.3417,2.0125,1.3417h.6708l.6708-.6708h1.3417v.6708l3.3541,2.6833,3.3542,2.0125.6708-.6708h.6708l1.3417.6708.6708.6708v.6708l.6708,1.3417,2.0125-1.3417,2.0125-.6708,1.3417.6708,1.3417,1.3417h1.3417l.6708.6708,1.3417,1.3417,2.0125-1.3417h3.3541l-.6708,1.3417h1.3417l.6708-.6708h-.6708v-.6708l.6708-3.3541,1.3417-2.6833,1.3417-.6708h2.0125v.6708h2.6833l1.3417-.6708v-2.6833l.6708-1.3417v-.6708l-.6707-.6708v-7.3791l-2.0125-1.3417-2.0123-1.3416.6707-2.6834.6708-2.6833v-1.3417h0l-1.3415-.6708v-2.0125l.6707-1.3417.6708-2.6833,1.3417-2.6833-1.3417-2.0125-.6708-1.3417-2.0125-4.6958Z\"\r\n    },\r\n    {\r\n        title: \"Республика Татарстан\",\r\n        id: \"RU-TA\",\r\n        path: \"M138.9758,212.0886h0l-1.3417.6708-2.0125-1.3417h-2.6833v.6708h-2.0125l-1.3417.6708H126.23v.6708h0l-3.3541.6708v.6708l.6708.6708-.6708,2.0125h-2.6833l-.6708-.6708h-.6708l-.6708.6708v1.3417l2.6833.6708.6708,1.3417,1.3417,1.3417H126.23l.6708,1.3417v2.0125l1.3417,2.0125,1.3417,2.0125,1.3417,1.3417,1.3417-.6708h1.3417l1.3417,1.3417.6708.6709v2.0124h.6708l1.3417,1.3417,1.3417,2.0125h.6708v.6708h0l-.6708.6708v1.3417l1.3417,1.3417,1.3417-2.6833.6708-1.3417v-.6708h1.3417l.6708-.6708.6708-1.3417v-1.3417l-.6708-.6708.6708-.6708v-.6708l.6708.6708,2.6833-.6708,2.6833-1.3417-.6708-1.3417-1.3417-1.3417h-.6708l-.6708-1.3417h2.0125l2.0125-1.3417-1.3417-.6708-.6708.6708v-2.6833h.6708l-1.3417-.6708-1.3417.6708.6708.6708v.6708l-1.3417.6708-.6708-.6708h-.6708v-.6708h-2.0125L142.33,221.48l-.6708-.6708h-.6708l1.3417-.6708h.6709l-.6709-.6708-1.3417-.6708-.6708-2.0125h.6708v-.6708h-.6708V214.772l.6708-2.0125-2.0125-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Тамбовская область\",\r\n        id: \"RU-TAM\",\r\n        path: \"M88.6636,204.71l-.6708.6708H86.6511L85.98,204.71l-.6708-1.3417H83.297l-1.3417-.6708L79.0036,204.71l-2.3479,2.6833.6708,4.025-1.0733.6708-1.2746.6708.5367.6708.6708.6708-.3354,1.3417-.2013.6708,1.2075.6708,1.4087.6708.7379,1.3417.6708,1.3417h1.0062l-.1342.6708.8721.6708,3.22-1.3417,3.3542-1.3417,1.3417-.6708.6708-.6708v-3.3541l-.6708-2.0125,1.3417-.6708v-1.3417h0l-.6708-.6708.6708-.6708.6708-1.3417.6708-.6708h0Z\"\r\n    },\r\n    {\r\n        title: \"Томская область\",\r\n        id: \"RU-TOM\",\r\n        path: \"M287.2292,243.6176h-2.0125l-1.3417-1.3417v-1.3416l-2.6833.6708h-2.6833l-1.3417-1.3417v-1.3417h-1.3417l-1.3417.6708-.6708-.6708-.6708-.6708-2.6833-.6708-2.6833-.6708-.6708-.6708h0l-.6709.6708.6709,1.3417-.6708,1.3417h-.6708l-.6708.6708-.6708,2.6833-2.0125,3.3541h-4.025L255.7,248.9843l-2.6833,2.6833V253.68h-.6708v2.0125h-.6708v.6708l.6708.6708v2.6833l.6708,1.3417v1.3417l-.6708.6708.6708,1.3417.6708.6708,1.3417,1.3417,1.3417.6708,8.0325,2.7231-.6267.6939,4.6691,2.62,3.3541,5.3666,4.6958.6708.6708,2.6833h4.025l.6708.6708v-.6708l.6708-.6708h2.0125l.6708,1.3417-.6708.6708V285.88l-.6708.6708-.6708.6708.34.34,1.0017,1.0015,1.3417-.6708.6708-2.0125.6708.6708h4.6958l1.3417-.6708.6708.6708h.6708l.6708-.6708,1.3417-1.3417h.6708l.6708.6708.6708-.6708h4.6958l.6708-.6708,1.3417.6708,1.3417.6708,2.0125-1.3417h2.6833l.6708-2.0125,1.3417-2.6833h1.3417l.6708-.6708V277.159h.6708v-.6708l-1.3417-3.3541-2.6833-2.6833v-2.0125l.6708-2.0125,2.0125-1.3417,1.3417-.6708-1.3417-2.0125-2.0125-.6708-.6708-1.3417v-2.0125l-1.3417-1.3417h-.6708l-.6708-.6708v-.6708l-1.3417-.6708-2.0122-.6709-2.6836-.6707-2.7715.6267-2.5951-1.2975v-8.7208l-2.0125-.6708-2.0125-1.3417-1.3417.6708-2.0125,1.3417h-.6708l-.6708.6708-1.3417-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Тульская область\",\r\n        id: \"RU-TUL\",\r\n        path: \"M77.7962,183.9138H76.7228l-.2013.6708-.7379.6708H75.247l-.3354-.6708-1.61-.6708-1.5429-.6708h-.2012l-.2683.6708H69.9474l-1.14.6708-.3354.6708-.47.6708.47,3.3541,1.4758,2.6833.7379.6708.6708.6708-.1342,1.3417.0671,2.0125,1.14,1.3417.8721.6708h1.2746l.2683-.6708.5367-.6708h1.0733l.8721-.6708H78.4l3.2871-5.3666-.067-1.3417,1.0426-1.3787h.6588l-.6951-.6337v-.6708l.01-1.3513.0265-.68h-.9988L80.24,183.2175l-.8338.0254-.9392.6708h-.6709Z\"\r\n    },\r\n    {\r\n        title: \"Тверская область\",\r\n        id: \"RU-TVE\",\r\n        path: \"M90.6761,151.0431l-2.0125-1.3417-.6708.6708-.6708.6708-2.0125.6708-2.0125.6708h-.6708l-.6708-.6708-.6037-.6708-3.69-.6708-3.7567-1.3417-.9392-.6708-.8721-1.3417-1.0733.6708-.9392.6708h.0671l.3354.6708-.6037.6708-.6037.6708v1.3417l-.4025,2.0125L65.4529,156.41l2.8175,3.3541,2.6162,3.3541,3.5554.6708,2.5492.6708.2013,1.3417.2683.6708,1.0062,1.3417.8721.6708,1.8783-.6708,1.4451-.7039h.6588l.68-.6587,1.3388,2.6775,3.9944,1.3684.7018.65,1.3107-1.3211,1.3417.6708,1.3417.6708h.6708l.6708,1.3417v1.3417l2.0125-2.6833,2.0125-.6708-.6708-.6708v-3.3541l.6708-1.3417v-1.3417h1.3417l.8108-.8108.5309-.5309-.6708-.6708,1.3417-.6708h1.3417l.6708-4.025h0L102.08,156.41h-2.0125l-1.3416-.6708h-.6709l-.6708-1.3417-1.3417-.6708h-.6708l-.6708.6708-1.3417-.6708-.6708-.6708h-.6708l-1.3417-2.0125Z\"\r\n    },\r\n    {\r\n        title: \"Республика Тыва\",\r\n        id: \"RU-TY\",\r\n        path: \"M348.9455,317.4089h-1.3417l-3.3541,1.3417-2.0125-.6708-.6708.6708h-1.3417V318.08h-.6708l-.6708.6708h-2.0125l-.6708,1.3417-.6708,2.0125-1.3417.6708-1.3417.6708-3.3541,4.6958-4.6958,2.6833-4.6958-.6708-4.025-1.3417-.6708-1.3417-1.3417-.6708-2.0125.6708-2.0125.6708v3.3541h-2.6833l-2.6833-.6708v4.6958l.6708.6708h.6708v2.6833l1.3417.6708v1.3417h-1.3417L304,342.23l.6708.6708h.6708v.6708l.6708,1.3417,2.6833-.6708h2.6833V342.9l.6708-1.3417,3.3541.6708,1.3417-.6708,1.3417-.6708h2.6833v-.6708l.6708-.6708h.6708v.6708h.6708v.6708h.6708l1.3417-.6708v1.3417l.6708,1.3417H328.15l3.3541.6708.6708,2.0125.6708,2.6833,2.6833.6708,2.6833.6708h.6708l.6708-.6708,3.3541,1.3417H344.25l2.0125.6708.6708.6708.6708.6708,4.6958-2.6833.6708-2.0125.6708-2.0125H352.97L352.3,344.242V342.23l-.6708-.6708,1.3417-3.3541,2.0125-2.6833h.6708l.6708-.6708,1.3417-1.3417.6708-1.3417v-1.3417l-.6708-.6708V328.813l.6708-.6708V324.788h.6708v-1.3417l-.6708-.6708h-2.6833L352.3,320.0922Z\"\r\n    },\r\n    {\r\n        title: \"Тюменская область\",\r\n        id: \"RU-TYU\",\r\n        path: \"M229.5378,234.226l-2.6833.6708-.6708.6708-.6707.6708h-.671l-1.3417-.6708h-3.3542l-.6708-.6708h-.6708l-1.3417.6708-.6708,1.3417H214.78l-2.0125-.6708v.6708l-.6708,1.3417v2.6833l-1.3417.6708h-2.6833v-.6708h-2.0125l-1.3417.6708-1.3417,2.6833-.6708,3.3541v.6708h.6708l-.6708.6708H201.363l-.6708,1.3417v2.6833l1.3417.6708,1.3417.6708v2.6833h2.0125v.6708l.6708.6708.6708-.6708.6708.6708,1.3417,2.0125.6708,2.0125.6708.6708,1.3417.6708h.6708l.6708,2.0125,1.3417,2.6833h.6708v-.6708l.6708.6708v.6708h.6708l1.3417.6708,1.3417,1.3417.6708,1.3417h1.3417l.6708-.6708v-1.3417h.6708L223.5,269.78l-.6708-.6708v-.6708H223.5l.6708-.6708-.6708-.6708.6708-.6708,1.3417-.6708v-.6708l.6708-.6708h.6708v-1.3417l.6708-.6708h.6708v-2.0125l1.3417.6708,2.0125-.6708-.6708-4.6958v-.6708H228.867l-.6708-.6708.6708-.6708,1.3417-.6708v-4.025l2.0125-1.3417,2.0125-1.3417.6708.6708.6708,1.3417-.6708.6708v1.3417h1.3417l1.3417.6708,1.3417.6708,2.0125,1.3417.6708-.6708h1.3417L247.65,253.68l5.3666-2.0125-1.3417-1.3417h-2.0125l-.6708-.6708-.6708-.6708-2.0125-1.3417-1.3417-.6708v-3.3542h-.6709l-1.3417-1.3417.6708-.6708v-.6708l-.6708-.6708h-.6708l-.6708-2.6833-1.3417-2.0125-.6708-.6708h-.6708l-.6708-.6708-2.0125-.6708h-2.0125l-.6708-.6708-.6708-1.3417H231.55l-.6708.6708-1.3417,2.0125Z\"\r\n    },\r\n    {\r\n        title: \"Удмуртская Республика\",\r\n        id: \"RU-UD\",\r\n        path: \"M163.1257,208.7345l-1.3417-.6708-.6708-.6708v-.6708l-.6708-.6708h-1.3417l-1.3417-.6708-1.3417-1.3417-2.6833,1.3415-1.3416,4.0251-1.3417.6708h-1.3417l-.6708-.671h-1.3416l-1.3417,2.0125-.6708,2.6833-.6708.6708h-1.3417l-.6708,2.6833-.6708,2.0125.6708.6708H142.33l-1.3417.6708h.6708l.6709.6708,1.3417,1.3417h2.0125v.6708h.6708l.6708.6708,1.3417-.6708v-.6708l-.6708-.6708,1.3417-.6708,1.3417.6708h-.6708v2.6833l.6708-.6708,1.3417.6708-2.0125,1.3417h-2.0125l.6708,1.3417h.6708l1.3417,1.3417.6708,1.3417,1.3417.6708,1.3417-.6708,2.0125-.6708,2.0125-.6708-.6708-1.3417-.6708-2.0125h-.6708l-.6708.6708v-3.3541l.6708-.6708h.6708l.6708-.6708v-.6708l.6708.6708.6708-.6708,2.6833-6.0375,2.0125-6.0375Z\"\r\n    },\r\n    {\r\n        title: \"Ульяновская область\",\r\n        id: \"RU-ULY\",\r\n        path: \"M121.5343,220.8094l-.6708-1.3417-2.6833-.6708v-1.3417l-2.0125-1.3417-1.3417-2.0125-2.6833,4.025-1.3417-.6708h-2.6833l.6708,2.6833-.6708,2.6833.6708,1.3417v1.3417l-2.0125,2.6833-2.0125,1.3417,2.0125,2.6834,4.025.6708.6708.6708v.6708l1.3417-2.0125,1.3417-3.3541h2.0125l1.3417-.6708h.6708l1.3417.6708h1.3417l1.3417,1.3417,2.0125,1.3417.6708-.6708H126.23l1.3417-2.0125.6708-1.3417-1.3417-2.0125v-2.0125l-.6708-1.3417h-3.3541l-1.3417-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Волгоградская область\",\r\n        id: \"RU-VGG\",\r\n        path: \"M84.6386,230.8719v-.6708H82.6261l-1.61-1.3417-.4025-2.6833-1.4758-.6708-1.7442-.6708-.7379-.6708-.6038-1.3417H75.18l-1.0063.6708-1.61-.6708H70.8866l-.0671,1.3417.2013,1.3417-1.4088,1.3417-1.4758.6708.1342,2.6833.6708,3.3541L67.13,234.8968l-1.8783,2.0125H65.52l.4025.6708.3354,1.3417.1342,2.0125-2.415,1.3417-2.2137-.6708-.8721.6708-.805.6708h-.6708l-.3354.6708.6708,1.3417,1.0062,2.0125-.6708,4.025h1.14v.6708l-.3354.6708h1.0733l.47.6708.4025.6708,3.2871-1.3417,2.4821,1.3417.8721-1.3417.47-1.3417,1.0063.6708v1.3417h2.0125l1.14-.6708h.8721l.5367.6708h.1342l.1342-.6708.7379.6708H79.54l2.0125.6708.4025,1.3417.6708,1.3417,1.3417-.6708.6708-.6708h2.0125V253.68l.6708-2.0125,2.6833-2.0125,3.3541-.6708.6708-.6708.6708-.6708v-.6708l-1.3417-2.6833-.6708-2.0125H91.3469l-1.3417-.6708v-1.3417l-.6708-.6708h-.6708l-.6708.6708h0l-.6708-.6708v-.6708h-.6708l-.6708-.6708h0l1.3417-.6708,1.3417-2.0125-.6708-2.0125-.6708-.6708h-.6708v-1.3417H85.3094l-.6708-.6708Z\"\r\n    },\r\n    {\r\n        title: \"Владимирская область\",\r\n        id: \"RU-VLA\",\r\n        path: \"M102.2813,182.5721h-2.2135l.6708-2.6833-.6708-2.0125h0l-2.6833.6708-2.0125-2.0125v-2.0125l-1.9782,3.319-1.3388,4.0375.6588.6587.68,1.3388,2.0188,2.0188L94.03,189.9513l2.0125,2.6833,2.6833,3.3541,2.6833-.6708,2.0125-1.3417,2.0125-.6708h3.3541v-.6708l.6708-.6708v-1.3417l-1.3417-.6708-1.3417-.6708V187.268h-.6708l-2.0125-2.0125-.6708-1.3417-.6709-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Вологодская область\",\r\n        id: \"RU-VLG\",\r\n        path: \"M124.8884,152.3848h-.6708l-1.3417-.6708v-1.3417l-.6708-.6708h-.6708v-2.6833l.6708-1.3417.6708-2.0125.6708-2.0125-2.0125-2.0125-1.3417-1.3417h-1.3417v.6708l-2.0125.6708-2.6833.6708-.6708-.6708-.6708-1.3417h-1.3417l-.6708.6708v.6708l-1.3417,1.3417-2.0125.6708-2.0125,1.3417v2.0125l-.6708.6708v.6708h.6708l-.6708.6708h-1.3417l-.6708.6708-.6708.6708-1.3417-.6708H98.7261l-.6708,2.0125v1.3417h.6708v.6708h.6708l.6708.6708v4.025H102.08l2.6833.6708v4.025l.6708-.6708,2.0125.6708v-2.0125l.6708-2.0125.6708.6708-.6708,1.3417v2.6833l2.0125,1.3417.6708-.6708h.6708l2.0125,2.0125v3.3541l2.6833,3.3542,2.6833-.6708v-.6708l.6708-.6708,2.0125.6708,2.0125.6708.6708-.6708.6708-.6708v1.3417h.6708l.6708.6708v2.0125l2.6833.6708v.6708h0l.6708.6708,1.3417.6708.6708,1.3417.6708,1.3417,4.6958,3.3541h.6708l.6708-.6708,1.3417.6708h.6708l.6708-.6708.6708-.6708,1.3417.6708.6708,1.3417,1.3417-1.3417-.6708-1.3417.6708-.6708.6708-.6708h-2.0125l-.6708-.6709v-1.3416l1.3417-.6708,1.3416.6708,2.6833-2.0124,1.3417-1.3417-.6708-2.6833-1.3417-.6708v-2.0125h-4.025l-2.0125-2.6833-1.3417-2.0125-1.3417.6708h-2.0125v-1.3417l-1.3417-.6707h-.6708l-.6708-1.3416v-.6708l-.6708-.6708-.6708-.6708h-.6708v-.6708l-1.3417.6708h-2.0125v-1.3417l-.6708-.6708-.6708-.6708-.6708-.6708-.6708-.6708h-.6708v-.6708l-.6708-1.3417Z\"\r\n    },\r\n    {\r\n        title: \"Воронежская область\",\r\n        id: \"RU-VOR\",\r\n        path: \"M69.7462,206.722v-.6708l-1.61-.6708-1.8783-.6708h0l.1342.6708-.4025.6708v.6708H64.9833l-.8721-.6708-.7379,1.3417-.9392,1.3417L62.3,210.0761l-1.0733.6708.8721.6708h.9392l-.6708,1.3417h-.9392v2.0125l.1342,1.3417-.6708.6708H60.22l-1.0062,2.0125-.6708,1.3417-.6037.6708-.47.6708.7379,4.025,1.2075.6708.5367.6708,1.5429,1.3417,2.75.6708,2.8846-.6708.47-.6708h.5367l1.4758-.6708,1.4088-1.3417-.2013-1.3417.0671-1.3417h1.6771l1.61.6708,1.0063-.6708h.8721l.6038,1.3417.7379.6708,1.7442.6708,1.4758.6708.9392-2.6833-.1342-2.0125-.8721-.6708.1342-.6708H79.6745l-.6708-1.3417-.7379-1.3417-1.4087-.6708-1.2075-.6708.2013-.6708.3354-1.3417-.6708-.6708-.5367-.6708-1.8112-2.0125L71.49,209.4053l.2012-.6708-.6037-1.3417h-.805l-.6037-.6708h.067Z\"\r\n    },\r\n    {\r\n        title: \"Ямало-Ненецкий автономный округ\",\r\n        id: \"RU-YAN\",\r\n        path: \"M289.9125,112.8058v-.6708h-1.3417l-3.3541,1.3417v2.0125h0l2.6833.6708,2.0125-.6708v-2.6833Zm8.7208,16.7707v-2.6833l.6708-2.0125v-1.3417l-.6708-.6708-.6708,2.0125-.6708,3.3541-2.0125,2.0125-3.3541.6708-.6708.6708h-.6708l-.6708,1.3417-.6708.6708-.6708.6708-.6708.6708v.6708l.6708.6708v.6708l-.6708,1.3417.6708,2.6833v2.6833l-2.0125,2.0125-1.3417,1.3417-.6708,2.0125-.6708,1.3417-.6708,1.3417v2.6833l-.6708,1.3417-.6708,2.0125h2.0125l.6708.6708.6708.6708,1.3417-.6708H287.9l4.025,2.6833,2.0125,4.025v.6708l-.6708.6708.6708,2.0125v2.0125h-1.3417l-2.0125,1.3417-.6708,2.0125,2.6833,2.6833,2.0125,1.3417h-1.3417l-1.3417-.6708-1.3417.6708h-.6708v-2.0125l-.6708-1.3417v-.6708l.6708-1.3417V171.168l.6708-.6708.6708-.6708h-.6708v-.6708l.6708-.6708v-2.6833l-.6708-1.3417v-2.6833h-7.3791l-1.3417,2.0125-.6708,1.3417v2.0125l-1.3417,4.6958-1.3417,1.3417-2.0125.6708-.6708,2.0125-1.3417,1.3417-2.0125.6708-2.0125,1.3417-1.3417-.6708-.6708.6708-1.3417,2.0125h-2.0125V180.56l-.6708-.6708-2.6833-.6708-2.0125-1.3417-1.3417-.6708-.6708-1.3417-.6708-2.0125v-2.0125h0l2.6833,1.3417,3.3541,1.3417-.6708.6708h-1.3417v.6708l2.0125,1.3417h2.6833v-1.3417l.6708-1.3417h.6708l1.3417-.6708.6708-.6708h.6708v-1.3417l2.6833-1.3417,2.6833-1.3417.6708-2.0125v-1.3417l2.0125-1.3417,1.3417-2.0125-1.3417-2.6833-.6708-4.025,2.0125-3.3541,1.3417-3.3541,1.3417-4.025.6708-.6708.6708-.6708,2.0125-4.025-.6708-3.3542v-3.3541l2.6833-2.6833,4.025-6.7083v-2.0125l-1.3417-2.0125-3.3541-1.3417-1.3417-.6708-1.3417-.6708h-.6708l.6708-.6708h-.6708v-.6708l-3.3541,4.025L276.496,124.21l-5.3666,4.025-4.025,2.0125h.6708l-.6708,1.3417h-.6708l-.6708,1.3417h1.3417l.6708.6708-1.3417,2.0125-1.3417,2.6833v1.3417l-.6708,1.3417-.6708-.6708h-.6708l-1.3417,1.3417-.6708,2.0125v.6708h0l.6708-.6708h.6708l.6708,1.3417.6708,1.3417h.6708v1.3417l-.6708.6708v3.3541l1.3417,1.3417v.6708l-4.025,4.6958h-1.3417l.6708-.6708v-.6708l-.6708-.6708-.6708-.6708h0l-.6708-4.6958-.778.0761-.113-.452-.3013-.452.7654-.0211-.2757-.7322-.639-.4312.3753-1.1132-1.717-2.241-2.6833-2.0125-1.3418,1.3417-.6707.6708-.671.6709,1.3417,2.0125.671.6708v1.3417l-2.0127,2.6834h-.6706l-.6708,2.6833,1.3417,2.0125.6708,2.0125-2.6833,1.3417-3.3541,2.0125-.6708.6708-.6708,1.3417h-2.6833l-2.6833.6708h-2.0125l-1.3417,1.3417v.6708l-2.0125.6708-1.3421,1.3419-.67.6706-1.3417-.6708h-2.0125l.6708,2.0125V173.18l.6708,1.3417v.6708l-1.3418,2.0127-.6707,2.0123h-1.3417l-.6708,1.3417.6708,1.3417,2.0125.6708-.6708,1.3417.6708,1.3417h2.0125l.6708.6708,1.3417-.6708h1.3417v.6708l.6708.6708.6708-.6708h.6708l2.0125.6708,2.0125,1.3417.6708.6708,1.3417.6708-.6708.6708-1.3417.6708,1.3417,2.0125,2.0125,2.0125h0l1.3417-.6708,1.3417-.6708,2.0125.6708h.6708l.6708-.6708h1.3417v.6708l.6708.6708h.6708l1.3417,1.3417-.6708.6708-.6708,1.3417v2.0125l.6708,1.3417,1.3417,1.3417v4.6958l3.3541.6708,3.3542-.6708,1.3417,2.0125.6708,2.0125,1.3417,1.3417,1.3417.6708,3.3541.6708,2.6833,2.0125,3.3541,2.0125.6708,2.6835,1.3417,1.3414h4.6958l1.3417.6708,1.3417.6708,4.025-1.3417,2.6833-1.3417h.6708v2.0125l2.0125,2.0125h2.6833l1.3417,2.0125,1.3417,2.0125h2.6833l1.3417,1.3417,1.342,2.6834,3.3538-2.6834,2.0125-2.6833.6708-1.3417v-.6708l.6708-.6708.6708-1.3417-1.3417-.6708-.6708-.6708v-1.3417l.6708-.6708h1.3417l2.6833-4.025.6708-4.025-.6708-2.0125-1.3417.6708-1.3417-.6708-.6708-1.3417h-1.3417l-.6708-2.0125h.6708l.6708-1.3417v-4.6958h0l-2.0125-.6708-.6708-2.0125v-4.6958l.6708-2.6833-.6708-3.3541-.6708-2.0125-.6708-.6708v-.6708l1.123-.818.6168-1.0683-1.069-.797V178.547l2.6833-1.3417,1.3417-3.3541,1.3417-8.05-.6708-.6708-.6708-.6708v-.6708l-.6708-.6708-1.3417,1.3417h-2.0125l-1.3417-1.3417-2.0125-1.3417h0l-.6708-2.0125-.6708-1.3417V156.41l1.3417-.6708h0v-.6708h.6711l2.683-2.0126,1.3417-1.3417,1.3417.6708h1.3417l.6708-3.3541,0-3.3541-1.342-1.3417-1.3417-1.3417V140.31h2.0125l1.3417-1.3417v-2.0125l-1.3417-1.3417-1.3417-1.3417-.6708-1.3417-.6708-1.3417h-2.0125l-2.0125,1.3417h1.3417l.6708,1.3417v1.3417l-2.6833-.6708-.6708-2.0125-2.6833.6708-.6708,2.6833.6708,2.6833,1.3417,2.0125h1.3417l1.3417,1.3417-.6708,3.3541-.6708-1.3417-.6708-1.3417-4.025-2.0125-3.3541-2.6833.6708-.6708,1.3417-2.6833-.6708-1.3417,2.0125-2.0125,1.3417-2.0125Zm7.3791,1.3417.6708-.6708v-1.3417l-.6708-.6708-3.3541,1.3417,2.6833,1.3417h.6708Zm-6.7083-10.0624-2.6833-.6708.6708,2.0125h.6708l.6708-1.3417Zm3.3541-3.3541.6708.6708.6708-.6708-1.3417-.6708-.6708.6708Z\"\r\n    },\r\n    {\r\n        title: \"Ярославская область\",\r\n        id: \"RU-YAR\",\r\n        path: \"M106.776,161.7764l.6708-.6708-2.0125-.6708-.6708.6708.6708.6708Zm4.6958.6708h-.6708l-.6708.6708-2.0125-1.3417V164.46l-.6708,2.0125-1.3417,1.3417v-2.0125l-2.0125.6708-.6708-.6708.6708-.6708h.6708l-.6708-4.025H102.751l-1.3417.6708.6708.6708-.6708.6708-.6708.6708H99.3969v1.3417l-.6708,1.3417v3.3541l.6708.6708-2.0125.6708-2.0125,2.6833v2.6833l2.0125,2.0125,2.6833-.6708,3.3542-1.3417,3.3542,1.3417,4.025-2.6833,4.6958-2.0125V172.51l.6708-1.3417-2.6833-3.3542V164.46l-2.0125-2.0125Z\"\r\n    },\r\n    {\r\n        title: \"Еврейская автономная область\",\r\n        id: \"RU-YEV\",\r\n        path: \"M552.8777,336.1921h-2.0125l-1.3416-.6711-.6709,0-2.0125-2.0125-.6708-.6708h-1.3417l-1.3417.6708-1.3417-.6708h-1.3417l-.6708,1.3417-.6708.6708H538.79l-2.6833,1.3417-.6708.6708-.6708,2.0125-.6708,1.3417V342.9l.6708.6708,1.3417,1.3417v1.3417l.6708,1.3417.6708.6708.6708.6708h0l1.3417.6708,1.3417-.6708h.6708l4.025-2.0125H546.84l.6708-1.3417V344.242l1.3417-.6708,1.3417-1.3417h1.3417l1.3417-2.6833,2.0125-1.3417h2.6833l2.0125-1.3417-.6708-1.3417h0l-.6708-1.3417-1.3417.6708h-2.6833l-1.3417,1.3417h0Z\"\r\n    },\r\n    {\r\n        title: \"Забайкальский край\",\r\n        id: \"RU-ZAB\",\r\n        path: \"M452.9241,273.1341l-2.0125-.6708L449.57,273.805l1.3417,1.3417-.6708.6708H449.57V277.83h-.6708v.6708l.6708,4.6958h1.3417v4.025h-.6708l-.6708-.6708-1.3417,1.3417-.6708.6708-1.3417-.6708h-.6708l-3.3541.6708v1.3417l-.6708.6708h.6708l.6708.6708.6708.6708V293.93l.671,1.3415h0v.6708h0l.6708,1.3417v2.6833l2.0125,1.3417,3.3541,2.6833v4.6959l-1.3417.6708h-1.3417l-1.3415.6707-1.3417.6708-3.3541,3.3541-4.025,3.3541-.6708.6708-.6708.6708,1.3417,2.6833,1.3417,4.025-3.3541,2.6833-3.3543.671-1.3415.6707-.671,1.3418-1.3415-.671h-.6708l-.6708,1.3417-.6708,1.3417-1.3417.6708-1.3418.671-1.3415,1.3415-1.3417,1.3417-.6708.6708-1.3417-.6708H417.37l-2.0125,1.3417-1.3417,1.3417-.6-.2-1.4122-.4709H409.32l-.6708,1.3417.6708,2.0125h0l-.4673.4673-.8743.8743-1.3417,1.3417,2.0125,1.3417,1.3415.671-1.3415,1.3415h-1.3417l-1.3417,2.0125v2.6833l1.3417,1.3417,2.6833,2.6833,4.6958.6708,4.6958.6708h.6708l.6708-.6708.6708.6708h1.3417l1.3417-.6708,2.0125-1.3417,4.6958-1.3417,4.6958-1.3417,1.3417-2.6833,4.6958-4.025,3.3541.6708,2.6833,1.3416h2.6833l4.025-.6708,3.3541,2.0125,4.6958.6708,1.3417-2.0125,2.0125-2.0125,2.0125-1.3417,1.3417-1.3417V342.9h-.6708v-.6708l1.3417-5.3666,1.3417-6.0375,2.0125-2.6833,1.3417-2.6833-.6708-.6708-.6708-.6708v-1.3417l-.6708-.6708-2.0125.6708-.6708-2.0125.6708-1.3417,2.0125-2.0125v-.6708l.6708-.6708,2.6833-1.3417,3.3541-2.0125L477.7447,310.7l-2.0125-2.0125h0l.6708-1.3417v-2.0125l.6708-.6708.6708-.6708-2.0125-1.3417h-.6708l-.6708-.6708,1.3417-3.3542-1.3417-3.3541-1.3417.6708h-.6708l-.6706-2.0123-1.3419-2.0126-2.0125.6708-1.3417.6708v.6708h-.6708l-1.3417-1.3417v-1.3417h.6708l.6708-.6708-1.3417-.6708-1.3417-.6708-.6708-.6708v-1.3417h-.6708v-2.6833l-2.0125-2.6833-.6708-2.6833h-.6708l-.6708.6708h0l-1.3417-2.6833v-4.025l-2.6833.6708-1.3417-.6708Z\"\r\n    }\r\n];","export default [\r\n    {\r\n        title: \"Республика Адыгея\",\r\n        id: \"RU-AD\",\r\n        quantity: \"8794\"\r\n    },\r\n    {\r\n        title: \"Республика Алтай\",\r\n        id: \"RU-AL\",\r\n        quantity: \"792\"\r\n    },\r\n    {\r\n        title: \"Алтайский край\",\r\n        id: \"RU-ALT\",\r\n        quantity: \"9059\"\r\n    },\r\n    {\r\n        title: \"Амурская область\",\r\n        id: \"RU-AMU\",\r\n        quantity: \"5470\"\r\n    },\r\n    {\r\n        title: \"Архангельская область\",\r\n        id: \"RU-ARK\",\r\n        quantity: \"5787\"\r\n    },\r\n    {\r\n        title: \"Астраханская область\",\r\n        id: \"RU-AST\",\r\n        quantity: \"3141\"\r\n    },\r\n    {\r\n        title: \"Республика Башкортостан\",\r\n        id: \"RU-BA\",\r\n        quantity: \"721\"\r\n    },\r\n    {\r\n        title: \"Белгородская область\",\r\n        id: \"RU-BEL\",\r\n        quantity: \"1881\"\r\n    },\r\n    {\r\n        title: \"Брянская область\",\r\n        id: \"RU-BRY\",\r\n        quantity: \"4831\"\r\n    },\r\n    {\r\n        title: \"Республика Бурятия\",\r\n        id: \"RU-BU\",\r\n        quantity: \"3587\"\r\n    },\r\n    {\r\n        title: \"Чеченская Республика\",\r\n        id: \"RU-CE\",\r\n        quantity: \"9792\"\r\n    },\r\n    {\r\n        title: \"Челябинская область\",\r\n        id: \"RU-CHE\",\r\n        quantity: \"6558\"\r\n    },\r\n    {\r\n        title: \"Чукотский автономный округ\",\r\n        id: \"RU-CHU\",\r\n        quantity: \"8026\"\r\n    },\r\n    {\r\n        title: \"Республика Крым\",\r\n        id: \"RU-CR\",\r\n        quantity: \"7471\"\r\n    },\r\n    {\r\n        title: \"Чувашская Республика\",\r\n        id: \"RU-CU\",\r\n        quantity: \"1155\"\r\n    },\r\n    {\r\n        title: \"Республика Дагестан\",\r\n        id: \"RU-DA\",\r\n        quantity: \"6272\"\r\n    },\r\n    {\r\n        title: \"Республика Ингушетия\",\r\n        id: \"RU-IN\",\r\n        quantity: \"6671\"\r\n    },\r\n    {\r\n        title: \"Иркутская область\",\r\n        id: \"RU-IRK\",\r\n        quantity: \"6452\"\r\n    },\r\n    {\r\n        title: \"Ивановская область\",\r\n        id: \"RU-IVA\",\r\n        quantity: \"3595\"\r\n    },\r\n    {\r\n        title: \"Камчатский край\",\r\n        id: \"RU-KAM\",\r\n        quantity: \"3278\"\r\n    },\r\n    {\r\n        title: \"Кабардино-Балкарская Республика\",\r\n        id: \"RU-KB\",\r\n        quantity: \"9175\"\r\n    },\r\n    {\r\n        title: \"Карачаево-Черкесская Республика\",\r\n        id: \"RU-KC\",\r\n        quantity: \"3438\"\r\n    },\r\n    {\r\n        title: \"Краснодарский край\",\r\n        id: \"RU-KDA\",\r\n        quantity: \"975\"\r\n    },\r\n    {\r\n        title: \"Кемеровская область\",\r\n        id: \"RU-KEM\",\r\n        quantity: \"9683\"\r\n    },\r\n    {\r\n        title: \"Калининградская область\",\r\n        id: \"RU-KGD\",\r\n        quantity: \"78\"\r\n    },\r\n    {\r\n        title: \"Курганская область\",\r\n        id: \"RU-KGN\",\r\n        quantity: \"1012\"\r\n    },\r\n    {\r\n        title: \"Хабаровский край\",\r\n        id: \"RU-KHA\",\r\n        quantity: \"2332\"\r\n    },\r\n    {\r\n        title: \"Ханты-Мансийский автономный округ - Югра\",\r\n        id: \"RU-KHM\",\r\n        quantity: \"938\"\r\n    },\r\n    {\r\n        title: \"Кировская область\",\r\n        id: \"RU-KIR\",\r\n        quantity: \"7384\"\r\n    },\r\n    {\r\n        title: \"Республика Хакасия\",\r\n        id: \"RU-KK\",\r\n        quantity: \"7666\"\r\n    },\r\n    {\r\n        title: \"Республика Калмыкия\",\r\n        id: \"RU-KL\",\r\n        quantity: \"4978\"\r\n    },\r\n    {\r\n        title: \"Калужская область\",\r\n        id: \"RU-KLU\",\r\n        quantity: \"8800\"\r\n    },\r\n    {\r\n        title: \"Республика Коми\",\r\n        id: \"RU-KO\",\r\n        quantity: \"841\"\r\n    },\r\n    {\r\n        title: \"Костромская область\",\r\n        id: \"RU-KOS\",\r\n        quantity: \"7153\"\r\n    },\r\n    {\r\n        title: \"Республика Карелия\",\r\n        id: \"RU-KR\",\r\n        quantity: \"60\"\r\n    },\r\n    {\r\n        title: \"Курская область\",\r\n        id: \"RU-KRS\",\r\n        quantity: \"4716\"\r\n    },\r\n    {\r\n        title: \"Красноярский край\",\r\n        id: \"RU-KYA\",\r\n        quantity: \"4324\"\r\n    },\r\n    {\r\n        title: \"Ленинградская область\",\r\n        id: \"RU-LEN\",\r\n        quantity: \"1652\"\r\n    },\r\n    {\r\n        title: \"Липецкая область\",\r\n        id: \"RU-LIP\",\r\n        quantity: \"5468\"\r\n    },\r\n    {\r\n        title: \"Магаданская область\",\r\n        id: \"RU-MAG\",\r\n        quantity: \"7092\"\r\n    },\r\n    {\r\n        title: \"Республика Марий Эл\",\r\n        id: \"RU-ME\",\r\n        quantity: \"9437\"\r\n    },\r\n    {\r\n        title: \"Республика Мордовия\",\r\n        id: \"RU-MO\",\r\n        quantity: \"159\"\r\n    },\r\n    {\r\n        title: \"Московская область\",\r\n        id: \"RU-MOS\",\r\n        quantity: \"873\"\r\n    },\r\n    {\r\n        title: \"Москва\",\r\n        id: \"RU-MOW\",\r\n        quantity: \"2524\"\r\n    },\r\n    {\r\n        title: \"Мурманская область\",\r\n        id: \"RU-MUR\",\r\n        quantity: \"1917\"\r\n    },\r\n    {\r\n        title: \"Ненецкий автономный округ\",\r\n        id: \"RU-NEN\",\r\n        quantity: \"1636\"\r\n    },\r\n    {\r\n        title: \"Новгородская область\",\r\n        id: \"RU-NGR\",\r\n        quantity: \"6160\"\r\n    },\r\n    {\r\n        title: \"Нижегородская область\",\r\n        id: \"RU-NIZ\",\r\n        quantity: \"7155\"\r\n    },\r\n    {\r\n        title: \"Новосибирская область\",\r\n        id: \"RU-NVS\",\r\n        quantity: \"3765\"\r\n    },\r\n    {\r\n        title: \"Омская область\",\r\n        id: \"RU-OMS\",\r\n        quantity: \"9418\"\r\n    },\r\n    {\r\n        title: \"Оренбургская область\",\r\n        id: \"RU-ORE\",\r\n        quantity: \"780\"\r\n    },\r\n    {\r\n        title: \"Орловская область\",\r\n        id: \"RU-ORL\",\r\n        quantity: \"4317\"\r\n    },\r\n    {\r\n        title: \"Пермский край\",\r\n        id: \"RU-PER\",\r\n        quantity: \"7362\"\r\n    },\r\n    {\r\n        title: \"Пензенская область\",\r\n        id: \"RU-PNZ\",\r\n        quantity: \"7620\"\r\n    },\r\n    {\r\n        title: \"Приморский край\",\r\n        id: \"RU-PRI\",\r\n        quantity: \"6636\"\r\n    },\r\n    {\r\n        title: \"Псковская область\",\r\n        id: \"RU-PSK\",\r\n        quantity: \"1321\"\r\n    },\r\n    {\r\n        title: \"Ростовская область\",\r\n        id: \"RU-ROS\",\r\n        quantity: \"2720\"\r\n    },\r\n    {\r\n        title: \"Рязанская область\",\r\n        id: \"RU-RYA\",\r\n        quantity: \"6352\"\r\n    },\r\n    {\r\n        title: \"Республика Саха (Якутия)\",\r\n        id: \"RU-SA\",\r\n        quantity: \"8666\"\r\n    },\r\n    {\r\n        title: \"Сахалинская область\",\r\n        id: \"RU-SAK\",\r\n        quantity: \"5520\"\r\n    },\r\n    {\r\n        title: \"Самарская область\",\r\n        id: \"RU-SAM\",\r\n        quantity: \"794\"\r\n    },\r\n    {\r\n        title: \"Саратовская область\",\r\n        id: \"RU-SAR\",\r\n        quantity: \"8751\"\r\n    },\r\n    {\r\n        title: \"Республика Северная Осетия — Алания\",\r\n        id: \"RU-SE\",\r\n        quantity: \"4294\"\r\n    },\r\n    {\r\n        title: \"Севастополь\",\r\n        id: \"RU-SEV\",\r\n        quantity: \"9203\"\r\n    },\r\n    {\r\n        title: \"Смоленская область\",\r\n        id: \"RU-SMO\",\r\n        quantity: \"5986\"\r\n    },\r\n    {\r\n        title: \"Санкт-Петербург\",\r\n        id: \"RU-SPE\",\r\n        quantity: \"8163\"\r\n    },\r\n    {\r\n        title: \"Ставропольский край\",\r\n        id: \"RU-STA\",\r\n        quantity: \"7023\"\r\n    },\r\n    {\r\n        title: \"Свердловская область\",\r\n        id: \"RU-SVE\",\r\n        quantity: \"4688\"\r\n    },\r\n    {\r\n        title: \"Республика Татарстан\",\r\n        id: \"RU-TA\",\r\n        quantity: \"9206\"\r\n    },\r\n    {\r\n        title: \"Тамбовская область\",\r\n        id: \"RU-TAM\",\r\n        quantity: \"6880\"\r\n    },\r\n    {\r\n        title: \"Томская область\",\r\n        id: \"RU-TOM\",\r\n        quantity: \"1780\"\r\n    },\r\n    {\r\n        title: \"Тульская область\",\r\n        id: \"RU-TUL\",\r\n        quantity: \"5145\"\r\n    },\r\n    {\r\n        title: \"Тверская область\",\r\n        id: \"RU-TVE\",\r\n        quantity: \"4042\"\r\n    },\r\n    {\r\n        title: \"Республика Тыва\",\r\n        id: \"RU-TY\",\r\n        quantity: \"7653\"\r\n    },\r\n    {\r\n        title: \"Тюменская область\",\r\n        id: \"RU-TYU\",\r\n        quantity: \"3605\"\r\n    },\r\n    {\r\n        title: \"Удмуртская Республика\",\r\n        id: \"RU-UD\",\r\n        quantity: \"1905\"\r\n    },\r\n    {\r\n        title: \"Ульяновская область\",\r\n        id: \"RU-ULY\",\r\n        quantity: \"5200\"\r\n    },\r\n    {\r\n        title: \"Волгоградская область\",\r\n        id: \"RU-VGG\",\r\n        quantity: \"1293\"\r\n    },\r\n    {\r\n        title: \"Владимирская область\",\r\n        id: \"RU-VLA\",\r\n        quantity: \"5168\"\r\n    },\r\n    {\r\n        title: \"Вологодская область\",\r\n        id: \"RU-VLG\",\r\n        quantity: \"1858\"\r\n    },\r\n    {\r\n        title: \"Воронежская область\",\r\n        id: \"RU-VOR\",\r\n        quantity: \"3838\"\r\n    },\r\n    {\r\n        title: \"Ямало-Ненецкий автономный округ\",\r\n        id: \"RU-YAN\",\r\n        quantity: \"9767\"\r\n    },\r\n    {\r\n        title: \"Ярославская область\",\r\n        id: \"RU-YAR\",\r\n        quantity: \"2815\"\r\n    },\r\n    {\r\n        title: \"Еврейская автономная область\",\r\n        id: \"RU-YEV\",\r\n        quantity: \"4338\"\r\n    },\r\n    {\r\n        title: \"Забайкальский край\",\r\n        id: \"RU-ZAB\",\r\n        quantity: \"9621\"\r\n    }\r\n];","import data from \"./data\";\r\n//Obtain the highest number of appearances that any single region has\r\nlet highestQuantity = 0;\r\nlet quantSum = 0;\r\n\r\nfor (const region of data) {\r\n  if (region.quantity > highestQuantity) {\r\n    highestQuantity = region.quantity;\r\n  }\r\n};\r\n\r\nexport const colourPalette = [\r\n  \"#ededed\",\r\n  \"#eee6e6\",\r\n  \"#efdfdd\",\r\n  \"#f0d9d6\",\r\n  \"#f1d4ce\",\r\n  \"#f2cfc6\",\r\n  \"#f3cbbe\",\r\n  \"#f4c7b6\",\r\n  \"#f5c6ae\",\r\n  \"#f6c3a6\",\r\n  \"#f7c29d\",\r\n  \"#f7c194\",\r\n  \"#f8c28c\",\r\n  \"#f9c284\",\r\n  \"#fac57b\",\r\n  \"#fbc772\",\r\n  \"#fccb6a\",\r\n  \"#fdce61\",\r\n  \"#fed458\",\r\n  \"#ffd94f\",\r\n];\r\n\r\nfor (const region of data) {\r\n  const index = Math.round(\r\n    (region.quantity / highestQuantity) *\r\n    (colourPalette.length - 1)\r\n  );\r\n\r\n  quantSum = quantSum + parseInt(region.quantity);\r\n\r\n  if (region.quantity <= 0) {\r\n    region.colour = \"#ffffff\";\r\n  } else {\r\n    region.colour = colourPalette[index];\r\n  }\r\n};\r\n\r\nexport {quantSum}; \r\n\r\nexport const getRegionData = regionTitle => {\r\n  return data.filter(region => region.title === regionTitle)[0];\r\n};\r\n\r\n","export { identity as linear } from '../internal';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\r\n    import { draw } from \"svelte/transition\";\r\n\r\n    export let path;\r\n    export let title;\r\n    export let fillColour = \"#333\";\r\n    export let strokeColour = \"#000\";\r\n    export let strokeWidth = \"1px\";\r\n\r\n    let transitionEnded = false;\r\n</script>\r\n\r\n<style>\r\n    .path {\r\n        transition: fill 0.3s ease;\r\n    }\r\n    .path:hover {\r\n        fill: #363636;\r\n    }\r\n</style>\r\n\r\n<path\r\non:click\r\nin:draw={{ duration: 3000 }}\r\non:introend={() => (transitionEnded = true)}\r\nclass=\"path\"\r\nd=\"{path}\"\r\nfill={transitionEnded ? fillColour : \"white\" }\r\nstroke={transitionEnded ? strokeColour : \"#202020\"}\r\nstyle=\"stroke-width:{strokeWidth}\">\r\n    <title>{ title }</title>\r\n</path>\r\n","<script>\n    import regions from \"./data/regionPaths.js\";\n    import { getRegionData, colourPalette, quantSum } from \"./data/getRegionData.js\";\n    import MapContainer from \"./components/MapContainer.svelte\";\n    import MapRegion from \"./components/MapRegion.svelte\";\n\n    let activeRegion = \"Россия\";\n    let strokeColour = \"#000\";\n    let strokeWidth = \"1px\";\n</script>\n\n<style>\n    .app {\n        display: grid;\n        width: 100%;\n        grid-template-columns: 1fr 1fr;\n        grid-template-rows: auto auto;\n    }\n\n    .map__pretext {\n        text-align: center;\n        font-size: 1.2rem;\n        margin-bottom: 2rem;\n    }\n\n    .map__description {\n        display: flex;\n        grid-column: 1;\n        grid-row: 1;\n        width: 70%;\n        justify-self: center;\n        align-self: center;\n        align-items: center;\n        height: 5rem;\n    }\n\n    .map__container {\n        grid-column: 1/-1;\n        grid-row: 2;\n        justify-self: center;\n        align-self: center;\n        width: 100%;\n    }\n\n    .map__palette {\n        grid-column: 2;\n        grid-row: 1;\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n        justify-self: center;\n        align-self: center;\n    }\n\n    .palette__text {\n        margin-right: 0.5rem;\n    }\n\n    .palette__nums {\n        padding: 0 0.5rem;\n    }\n\n    .map__colours {\n        grid-column: 1/3;\n        display: flex;\n        border: 1px solid #000;\n        border-radius: 3px;\n        overflow: hidden;\n    }\n\n    @media screen and (max-width: 900px) {\n        .app {\n            grid-template-columns: 1fr;\n            grid-gap: 1rem;\n        }\n        .map__pretext {\n            font-size: 1rem;\n            margin-bottom: 0;\n        }\n        .map__description {\n            grid-column: 1;\n            justify-content: space-between;\n            width: 100%;\n            font-size: 0.8rem;\n        }\n        .map__description ul {\n            display: flex;\n            justify-content: space-between;\n            padding: 0;\n            margin-left: 2rem;\n        }\n        .map__description li {\n            padding: 0 0.5rem;\n            list-style-type: none;\n        }\n        .map__palette {\n            grid-column: 1;\n            grid-row: 2;\n            font-size: 0.8rem;\n        }\n        .map__container {\n            grid-column: 1;\n            grid-row: 3;\n        }\n        .palette__text {\n            display: none;\n        }\n    }\n</style>\n\n<p class=\"map__pretext\">\n    На <b>1.08.2020</b> мы произвели и доставили <b>{ quantSum }</b> корзин и экранов для кондиционеров\n</p>\n\n        <main class=\"app\">\n            <div class=\"map__description\">\n                <h4 style=\"text-align: center; width: 40%\">{activeRegion}</h4>\n                <ul>\n                {#if activeRegion!==\"Россия\" }\n                    <li>\n                        Всего объектов: <b>{ Math.floor(getRegionData(activeRegion).quantity/80) }</b>\n                    </li>\n                    <li>\n                        Корзин поставлено: <b>{ getRegionData(activeRegion).quantity }</b>\n                    </li>\n                {:else}\n                    <li>\n                        Всего объектов: <b>{ Math.floor(quantSum/80) }</b>\n                    </li>\n                    <li>\n                        Корзин поставлено: <b>{ quantSum }</b>\n                    </li>\n                {/if}\n                </ul>\n            </div>\n            <div class=\"map__palette\">\n                <p class=\"palette__text\">Продукции поставлено:</p>\n                <b class=\"palette__nums\">0</b>           \n                <div class=\"map__colours\">\n                    {#each colourPalette as colour}\n                        <div\n                            style=\" height: 20px; width: 10px; background-color: {colour}; \" />\n                    {/each}\n                </div>\n                <b class=\"palette__nums\">10000</b> \n            </div>\n            <div class=\"map__container\">\n                <MapContainer>\n                    {#each regions as { title, path }}\n                        <MapRegion\n                            {title}\n                            on:click={() => {\n                                activeRegion = title;\n                            }}\n                            {path}\n                            fillColour={activeRegion === title ? '#363636' : getRegionData(title).colour}\n                            {strokeColour}\n                            {strokeWidth} />\n                    {/each}\n                </MapContainer>\n            </div>\n        </main>\n","import App from \"./App.svelte\"\n\n//Here we use intro:true so that transitions run on initial load.\nconst app = new App({\n  target: document.getElementById('svelte__map'),\n  intro: true,\n})\n\nexport default app"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","active_docs","current_component","active","delete_rule","previous","animation","split","next","filter","anim","indexOf","deleted","join","doc","stylesheet","__svelte_stylesheet","cssRules","deleteRule","__svelte_rules","clear","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","flush","update","$$","pop","callback","has","add","fragment","before_update","after_update","promise","dispatch","direction","kind","dispatchEvent","type","detail","e","createEvent","initCustomEvent","custom_event","outroing","outros","transition_in","block","local","transition_out","o","null_transition","duration","create_in_transition","params","animation_name","config","running","uid","cleanup","go","delay","easing","tick","css","ease","step","keyframes","t","rule","str","hash","charCodeAt","ownerDocument","head","sheet","current_rules","insertRule","create_rule","start_time","end_time","abort","fulfill","[object Object]","loop","started","then","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","this","$destroy","index","splice","$$props","obj","$$set","keys","title","id","path","quantity","highestQuantity","quantSum","region","colourPalette","round","parseInt","colour","getRegionData","regionTitle","slot_ctx","cubicInOut","pow","draw","speed","getTotalLength","u","fillColour","strokeColour","strokeWidth","transitionEnded","floor","regions","r","activeRegion","getElementById"],"mappings":"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"}